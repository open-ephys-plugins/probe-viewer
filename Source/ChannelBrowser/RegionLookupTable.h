#pragma once
/*
 ------------------------------------------------------------------

 This file is part of the Open Ephys GUI
 Copyright (C) 2023 Open Ephys

 ------------------------------------------------------------------

 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>.

 */

#ifndef RegionLookupTable_h
#define RegionLookupTable_h


#include "VisualizerWindowHeaders.h"


class RegionLookupTable
{
public:

	RegionLookupTable()
	{
		colourMap[997] = Colour::fromString("#FFFFFFFF");
		colourMap[8] = Colour::fromString("#FFBFDAE3");
		colourMap[567] = Colour::fromString("#FFB0F0FF");
		colourMap[688] = Colour::fromString("#FFB0FFB8");
		colourMap[695] = Colour::fromString("#FF70FF70");
		colourMap[315] = Colour::fromString("#FF70FF71");
		colourMap[184] = Colour::fromString("#FF268F45");
		colourMap[68] = Colour::fromString("#FF268F45");
		colourMap[667] = Colour::fromString("#FF268F45");
		colourMap[526157192] = Colour::fromString("#FF268F45");
		colourMap[526157196] = Colour::fromString("#FF268F45");
		colourMap[526322264] = Colour::fromString("#FF268F45");
		colourMap[500] = Colour::fromString("#FF1F9D5A");
		colourMap[107] = Colour::fromString("#FF1F9D5A");
		colourMap[219] = Colour::fromString("#FF1F9D5A");
		colourMap[299] = Colour::fromString("#FF1F9D5A");
		colourMap[644] = Colour::fromString("#FF1F9D5A");
		colourMap[947] = Colour::fromString("#FF1F9D5A");
		colourMap[985] = Colour::fromString("#FF1F9D5A");
		colourMap[320] = Colour::fromString("#FF1F9D5A");
		colourMap[943] = Colour::fromString("#FF1F9D5A");
		colourMap[648] = Colour::fromString("#FF1F9D5A");
		colourMap[844] = Colour::fromString("#FF1F9D5A");
		colourMap[882] = Colour::fromString("#FF1F9D5A");
		colourMap[993] = Colour::fromString("#FF1F9D5A");
		colourMap[656] = Colour::fromString("#FF1F9D5A");
		colourMap[962] = Colour::fromString("#FF1F9D5A");
		colourMap[767] = Colour::fromString("#FF1F9D5A");
		colourMap[1021] = Colour::fromString("#FF1F9D5A");
		colourMap[1085] = Colour::fromString("#FF1F9D5A");
		colourMap[453] = Colour::fromString("#FF188064");
		colourMap[12993] = Colour::fromString("#FF188064");
		colourMap[12994] = Colour::fromString("#FF188064");
		colourMap[12995] = Colour::fromString("#FF188064");
		colourMap[12996] = Colour::fromString("#FF188064");
		colourMap[12997] = Colour::fromString("#FF188064");
		colourMap[12998] = Colour::fromString("#FF188064");
		colourMap[322] = Colour::fromString("#FF188064");
		colourMap[793] = Colour::fromString("#FF188064");
		colourMap[346] = Colour::fromString("#FF188064");
		colourMap[865] = Colour::fromString("#FF188064");
		colourMap[921] = Colour::fromString("#FF188064");
		colourMap[686] = Colour::fromString("#FF188064");
		colourMap[719] = Colour::fromString("#FF188064");
		colourMap[353] = Colour::fromString("#FF188064");
		colourMap[558] = Colour::fromString("#FF188064");
		colourMap[838] = Colour::fromString("#FF188064");
		colourMap[654] = Colour::fromString("#FF188064");
		colourMap[702] = Colour::fromString("#FF188064");
		colourMap[889] = Colour::fromString("#FF188064");
		colourMap[929] = Colour::fromString("#FF188064");
		colourMap[329] = Colour::fromString("#FF188064");
		colourMap[981] = Colour::fromString("#FF188064");
		colourMap[201] = Colour::fromString("#FF188064");
		colourMap[1047] = Colour::fromString("#FF188064");
		colourMap[1070] = Colour::fromString("#FF188064");
		colourMap[1038] = Colour::fromString("#FF188064");
		colourMap[1062] = Colour::fromString("#FF188064");
		colourMap[480149202] = Colour::fromString("#FF188064");
		colourMap[480149206] = Colour::fromString("#FF188064");
		colourMap[480149210] = Colour::fromString("#FF188064");
		colourMap[480149214] = Colour::fromString("#FF188064");
		colourMap[480149218] = Colour::fromString("#FF188064");
		colourMap[480149222] = Colour::fromString("#FF188064");
		colourMap[480149226] = Colour::fromString("#FF188064");
		colourMap[337] = Colour::fromString("#FF188064");
		colourMap[1030] = Colour::fromString("#FF188064");
		colourMap[113] = Colour::fromString("#FF188064");
		colourMap[1094] = Colour::fromString("#FF188064");
		colourMap[1128] = Colour::fromString("#FF188064");
		colourMap[478] = Colour::fromString("#FF188064");
		colourMap[510] = Colour::fromString("#FF188064");
		colourMap[345] = Colour::fromString("#FF188064");
		colourMap[878] = Colour::fromString("#FF188064");
		colourMap[657] = Colour::fromString("#FF188064");
		colourMap[950] = Colour::fromString("#FF188064");
		colourMap[974] = Colour::fromString("#FF188064");
		colourMap[1102] = Colour::fromString("#FF188064");
		colourMap[2] = Colour::fromString("#FF188064");
		colourMap[369] = Colour::fromString("#FF188064");
		colourMap[450] = Colour::fromString("#FF188064");
		colourMap[854] = Colour::fromString("#FF188064");
		colourMap[577] = Colour::fromString("#FF188064");
		colourMap[625] = Colour::fromString("#FF188064");
		colourMap[945] = Colour::fromString("#FF188064");
		colourMap[1026] = Colour::fromString("#FF188064");
		colourMap[361] = Colour::fromString("#FF188064");
		colourMap[1006] = Colour::fromString("#FF188064");
		colourMap[670] = Colour::fromString("#FF188064");
		colourMap[1086] = Colour::fromString("#FF188064");
		colourMap[1111] = Colour::fromString("#FF188064");
		colourMap[9] = Colour::fromString("#FF188064");
		colourMap[461] = Colour::fromString("#FF188064");
		colourMap[182305689] = Colour::fromString("#FF188064");
		colourMap[182305693] = Colour::fromString("#FF188064");
		colourMap[182305697] = Colour::fromString("#FF188064");
		colourMap[182305701] = Colour::fromString("#FF188064");
		colourMap[182305705] = Colour::fromString("#FF188064");
		colourMap[182305709] = Colour::fromString("#FF188064");
		colourMap[182305713] = Colour::fromString("#FF188064");
		colourMap[378] = Colour::fromString("#FF188064");
		colourMap[873] = Colour::fromString("#FF188064");
		colourMap[806] = Colour::fromString("#FF188064");
		colourMap[1035] = Colour::fromString("#FF188064");
		colourMap[1090] = Colour::fromString("#FF188064");
		colourMap[862] = Colour::fromString("#FF188064");
		colourMap[893] = Colour::fromString("#FF188064");
		colourMap[1057] = Colour::fromString("#FF009C75");
		colourMap[36] = Colour::fromString("#FF009C75");
		colourMap[180] = Colour::fromString("#FF009C75");
		colourMap[148] = Colour::fromString("#FF009C75");
		colourMap[187] = Colour::fromString("#FF009C75");
		colourMap[638] = Colour::fromString("#FF009C75");
		colourMap[662] = Colour::fromString("#FF009C75");
		colourMap[677] = Colour::fromString("#FF11AD83");
		colourMap[897] = Colour::fromString("#FF11AD83");
		colourMap[1106] = Colour::fromString("#FF11AD83");
		colourMap[1010] = Colour::fromString("#FF11AD83");
		colourMap[1058] = Colour::fromString("#FF11AD83");
		colourMap[857] = Colour::fromString("#FF11AD83");
		colourMap[849] = Colour::fromString("#FF11AD83");
		colourMap[247] = Colour::fromString("#FF19399");
		colourMap[1011] = Colour::fromString("#FF19399");
		colourMap[527] = Colour::fromString("#FF19399");
		colourMap[600] = Colour::fromString("#FF19399");
		colourMap[678] = Colour::fromString("#FF19399");
		colourMap[252] = Colour::fromString("#FF19399");
		colourMap[156] = Colour::fromString("#FF19399");
		colourMap[243] = Colour::fromString("#FF19399");
		colourMap[480149230] = Colour::fromString("#FF19399");
		colourMap[480149234] = Colour::fromString("#FF19399");
		colourMap[480149238] = Colour::fromString("#FF19399");
		colourMap[480149242] = Colour::fromString("#FF19399");
		colourMap[480149246] = Colour::fromString("#FF19399");
		colourMap[480149250] = Colour::fromString("#FF19399");
		colourMap[480149254] = Colour::fromString("#FF19399");
		colourMap[1002] = Colour::fromString("#FF19399");
		colourMap[735] = Colour::fromString("#FF19399");
		colourMap[251] = Colour::fromString("#FF19399");
		colourMap[816] = Colour::fromString("#FF19399");
		colourMap[847] = Colour::fromString("#FF19399");
		colourMap[954] = Colour::fromString("#FF19399");
		colourMap[1005] = Colour::fromString("#FF19399");
		colourMap[1027] = Colour::fromString("#FF19399");
		colourMap[696] = Colour::fromString("#FF19399");
		colourMap[643] = Colour::fromString("#FF19399");
		colourMap[759] = Colour::fromString("#FF19399");
		colourMap[791] = Colour::fromString("#FF19399");
		colourMap[249] = Colour::fromString("#FF19399");
		colourMap[456] = Colour::fromString("#FF19399");
		colourMap[1018] = Colour::fromString("#FF19399");
		colourMap[959] = Colour::fromString("#FF19399");
		colourMap[755] = Colour::fromString("#FF19399");
		colourMap[990] = Colour::fromString("#FF19399");
		colourMap[1023] = Colour::fromString("#FF19399");
		colourMap[520] = Colour::fromString("#FF19399");
		colourMap[598] = Colour::fromString("#FF19399");
		colourMap[669] = Colour::fromString("#FF08858C");
		colourMap[801] = Colour::fromString("#FF08858C");
		colourMap[561] = Colour::fromString("#FF08858C");
		colourMap[913] = Colour::fromString("#FF08858C");
		colourMap[937] = Colour::fromString("#FF08858C");
		colourMap[457] = Colour::fromString("#FF08858C");
		colourMap[497] = Colour::fromString("#FF08858C");
		colourMap[402] = Colour::fromString("#FF08858C");
		colourMap[1074] = Colour::fromString("#FF08858C");
		colourMap[905] = Colour::fromString("#FF08858C");
		colourMap[1114] = Colour::fromString("#FF08858C");
		colourMap[233] = Colour::fromString("#FF08858C");
		colourMap[601] = Colour::fromString("#FF08858C");
		colourMap[649] = Colour::fromString("#FF08858C");
		colourMap[394] = Colour::fromString("#FF08858C");
		colourMap[281] = Colour::fromString("#FF08858C");
		colourMap[1066] = Colour::fromString("#FF08858C");
		colourMap[401] = Colour::fromString("#FF08858C");
		colourMap[433] = Colour::fromString("#FF08858C");
		colourMap[1046] = Colour::fromString("#FF08858C");
		colourMap[441] = Colour::fromString("#FF08858C");
		colourMap[409] = Colour::fromString("#FF08858C");
		colourMap[421] = Colour::fromString("#FF08858C");
		colourMap[973] = Colour::fromString("#FF08858C");
		colourMap[573] = Colour::fromString("#FF08858C");
		colourMap[613] = Colour::fromString("#FF08858C");
		colourMap[74] = Colour::fromString("#FF08858C");
		colourMap[121] = Colour::fromString("#FF08858C");
		colourMap[385] = Colour::fromString("#FF08858C");
		colourMap[593] = Colour::fromString("#FF08858C");
		colourMap[821] = Colour::fromString("#FF08858C");
		colourMap[721] = Colour::fromString("#FF08858C");
		colourMap[778] = Colour::fromString("#FF08858C");
		colourMap[33] = Colour::fromString("#FF08858C");
		colourMap[305] = Colour::fromString("#FF08858C");
		colourMap[425] = Colour::fromString("#FF08858C");
		colourMap[750] = Colour::fromString("#FF08858C");
		colourMap[269] = Colour::fromString("#FF08858C");
		colourMap[869] = Colour::fromString("#FF08858C");
		colourMap[902] = Colour::fromString("#FF08858C");
		colourMap[377] = Colour::fromString("#FF08858C");
		colourMap[393] = Colour::fromString("#FF08858C");
		colourMap[533] = Colour::fromString("#FF08858C");
		colourMap[805] = Colour::fromString("#FF08858C");
		colourMap[41] = Colour::fromString("#FF08858C");
		colourMap[501] = Colour::fromString("#FF08858C");
		colourMap[565] = Colour::fromString("#FF08858C");
		colourMap[257] = Colour::fromString("#FF08858C");
		colourMap[469] = Colour::fromString("#FF08858C");
		colourMap[312782574] = Colour::fromString("#FF08858C");
		colourMap[312782578] = Colour::fromString("#FF08858C");
		colourMap[312782582] = Colour::fromString("#FF08858C");
		colourMap[312782586] = Colour::fromString("#FF08858C");
		colourMap[312782590] = Colour::fromString("#FF08858C");
		colourMap[312782594] = Colour::fromString("#FF08858C");
		colourMap[312782598] = Colour::fromString("#FF08858C");
		colourMap[312782628] = Colour::fromString("#FF08858C");
		colourMap[312782632] = Colour::fromString("#FF08858C");
		colourMap[312782636] = Colour::fromString("#FF08858C");
		colourMap[312782640] = Colour::fromString("#FF08858C");
		colourMap[312782644] = Colour::fromString("#FF08858C");
		colourMap[312782648] = Colour::fromString("#FF08858C");
		colourMap[312782652] = Colour::fromString("#FF08858C");
		colourMap[31] = Colour::fromString("#FF40A666");
		colourMap[572] = Colour::fromString("#FF40A666");
		colourMap[1053] = Colour::fromString("#FF40A666");
		colourMap[739] = Colour::fromString("#FF40A666");
		colourMap[179] = Colour::fromString("#FF40A666");
		colourMap[227] = Colour::fromString("#FF40A666");
		colourMap[39] = Colour::fromString("#FF40A666");
		colourMap[935] = Colour::fromString("#FF40A666");
		colourMap[211] = Colour::fromString("#FF40A666");
		colourMap[1015] = Colour::fromString("#FF40A666");
		colourMap[919] = Colour::fromString("#FF40A666");
		colourMap[927] = Colour::fromString("#FF40A666");
		colourMap[48] = Colour::fromString("#FF40A666");
		colourMap[588] = Colour::fromString("#FF40A666");
		colourMap[296] = Colour::fromString("#FF40A666");
		colourMap[772] = Colour::fromString("#FF40A666");
		colourMap[810] = Colour::fromString("#FF40A666");
		colourMap[819] = Colour::fromString("#FF40A666");
		colourMap[972] = Colour::fromString("#FF2FA850");
		colourMap[171] = Colour::fromString("#FF2FA850");
		colourMap[195] = Colour::fromString("#FF2FA850");
		colourMap[304] = Colour::fromString("#FF2FA850");
		colourMap[363] = Colour::fromString("#FF2FA850");
		colourMap[84] = Colour::fromString("#FF2FA850");
		colourMap[132] = Colour::fromString("#FF2FA850");
		colourMap[44] = Colour::fromString("#FF59B363");
		colourMap[707] = Colour::fromString("#FF59B363");
		colourMap[747] = Colour::fromString("#FF59B363");
		colourMap[556] = Colour::fromString("#FF59B363");
		colourMap[827] = Colour::fromString("#FF59B363");
		colourMap[1054] = Colour::fromString("#FF59B363");
		colourMap[1081] = Colour::fromString("#FF59B363");
		colourMap[714] = Colour::fromString("#FF248A5E");
		colourMap[264] = Colour::fromString("#FF248A5E");
		colourMap[492] = Colour::fromString("#FF248A5E");
		colourMap[352] = Colour::fromString("#FF248A5E");
		colourMap[476] = Colour::fromString("#FF248A5E");
		colourMap[516] = Colour::fromString("#FF248A5E");
		colourMap[723] = Colour::fromString("#FF248A5E");
		colourMap[448] = Colour::fromString("#FF248A5E");
		colourMap[412] = Colour::fromString("#FF248A5E");
		colourMap[630] = Colour::fromString("#FF248A5E");
		colourMap[440] = Colour::fromString("#FF248A5E");
		colourMap[488] = Colour::fromString("#FF248A5E");
		colourMap[731] = Colour::fromString("#FF248A5E");
		colourMap[484] = Colour::fromString("#FF248A5E");
		colourMap[524] = Colour::fromString("#FF248A5E");
		colourMap[582] = Colour::fromString("#FF248A5E");
		colourMap[620] = Colour::fromString("#FF248A5E");
		colourMap[910] = Colour::fromString("#FF248A5E");
		colourMap[527696977] = Colour::fromString("#FF248A5E");
		colourMap[738] = Colour::fromString("#FF248A5E");
		colourMap[746] = Colour::fromString("#FF248A5E");
		colourMap[969] = Colour::fromString("#FF248A5E");
		colourMap[288] = Colour::fromString("#FF248A5E");
		colourMap[1125] = Colour::fromString("#FF248A5E");
		colourMap[608] = Colour::fromString("#FF248A5E");
		colourMap[680] = Colour::fromString("#FF248A5E");
		colourMap[95] = Colour::fromString("#FF219866");
		colourMap[104] = Colour::fromString("#FF219866");
		colourMap[996] = Colour::fromString("#FF219866");
		colourMap[328] = Colour::fromString("#FF219866");
		colourMap[1101] = Colour::fromString("#FF219866");
		colourMap[783] = Colour::fromString("#FF219866");
		colourMap[831] = Colour::fromString("#FF219866");
		colourMap[111] = Colour::fromString("#FF219866");
		colourMap[120] = Colour::fromString("#FF219866");
		colourMap[163] = Colour::fromString("#FF219866");
		colourMap[344] = Colour::fromString("#FF219866");
		colourMap[314] = Colour::fromString("#FF219866");
		colourMap[355] = Colour::fromString("#FF219866");
		colourMap[119] = Colour::fromString("#FF219866");
		colourMap[704] = Colour::fromString("#FF219866");
		colourMap[694] = Colour::fromString("#FF219866");
		colourMap[800] = Colour::fromString("#FF219866");
		colourMap[675] = Colour::fromString("#FF219866");
		colourMap[699] = Colour::fromString("#FF219866");
		colourMap[254] = Colour::fromString("#FF1AA698");
		colourMap[894] = Colour::fromString("#FF1AA698");
		colourMap[671] = Colour::fromString("#FF1AA698");
		colourMap[965] = Colour::fromString("#FF1AA698");
		colourMap[774] = Colour::fromString("#FF1AA698");
		colourMap[906] = Colour::fromString("#FF1AA698");
		colourMap[279] = Colour::fromString("#FF1AA698");
		colourMap[480149258] = Colour::fromString("#FF1AA698");
		colourMap[480149262] = Colour::fromString("#FF1AA698");
		colourMap[480149266] = Colour::fromString("#FF1AA698");
		colourMap[480149270] = Colour::fromString("#FF1AA698");
		colourMap[480149274] = Colour::fromString("#FF1AA698");
		colourMap[480149278] = Colour::fromString("#FF1AA698");
		colourMap[480149282] = Colour::fromString("#FF1AA698");
		colourMap[480149286] = Colour::fromString("#FF1AA698");
		colourMap[480149290] = Colour::fromString("#FF1AA698");
		colourMap[480149294] = Colour::fromString("#FF1AA698");
		colourMap[480149298] = Colour::fromString("#FF1AA698");
		colourMap[480149302] = Colour::fromString("#FF1AA698");
		colourMap[480149306] = Colour::fromString("#FF1AA698");
		colourMap[480149310] = Colour::fromString("#FF1AA698");
		colourMap[480149314] = Colour::fromString("#FF1AA698");
		colourMap[480149318] = Colour::fromString("#FF1AA698");
		colourMap[480149322] = Colour::fromString("#FF1AA698");
		colourMap[480149326] = Colour::fromString("#FF1AA698");
		colourMap[480149330] = Colour::fromString("#FF1AA698");
		colourMap[480149334] = Colour::fromString("#FF1AA698");
		colourMap[480149338] = Colour::fromString("#FF1AA698");
		colourMap[879] = Colour::fromString("#FF1AA698");
		colourMap[442] = Colour::fromString("#FF1AA698");
		colourMap[434] = Colour::fromString("#FF1AA698");
		colourMap[545] = Colour::fromString("#FF1AA698");
		colourMap[610] = Colour::fromString("#FF1AA698");
		colourMap[274] = Colour::fromString("#FF1AA698");
		colourMap[330] = Colour::fromString("#FF1AA698");
		colourMap[886] = Colour::fromString("#FF1AA698");
		colourMap[542] = Colour::fromString("#FF1AA698");
		colourMap[606] = Colour::fromString("#FF1AA698");
		colourMap[430] = Colour::fromString("#FF1AA698");
		colourMap[687] = Colour::fromString("#FF1AA698");
		colourMap[590] = Colour::fromString("#FF1AA698");
		colourMap[622] = Colour::fromString("#FF1AA698");
		colourMap[22] = Colour::fromString("#FF009FAC");
		colourMap[532] = Colour::fromString("#FF009FAC");
		colourMap[241] = Colour::fromString("#FF009FAC");
		colourMap[635] = Colour::fromString("#FF009FAC");
		colourMap[683] = Colour::fromString("#FF009FAC");
		colourMap[308] = Colour::fromString("#FF009FAC");
		colourMap[340] = Colour::fromString("#FF009FAC");
		colourMap[312782546] = Colour::fromString("#FF009FAC");
		colourMap[312782550] = Colour::fromString("#FF009FAC");
		colourMap[312782554] = Colour::fromString("#FF009FAC");
		colourMap[312782558] = Colour::fromString("#FF009FAC");
		colourMap[312782562] = Colour::fromString("#FF009FAC");
		colourMap[312782566] = Colour::fromString("#FF009FAC");
		colourMap[312782570] = Colour::fromString("#FF009FAC");
		colourMap[417] = Colour::fromString("#FF009FAC");
		colourMap[312782604] = Colour::fromString("#FF009FAC");
		colourMap[312782608] = Colour::fromString("#FF009FAC");
		colourMap[312782612] = Colour::fromString("#FF009FAC");
		colourMap[312782616] = Colour::fromString("#FF009FAC");
		colourMap[312782620] = Colour::fromString("#FF009FAC");
		colourMap[312782624] = Colour::fromString("#FF009FAC");
		colourMap[541] = Colour::fromString("#FF15B0B3");
		colourMap[97] = Colour::fromString("#FF15B0B3");
		colourMap[1127] = Colour::fromString("#FF15B0B3");
		colourMap[234] = Colour::fromString("#FF15B0B3");
		colourMap[289] = Colour::fromString("#FF15B0B3");
		colourMap[729] = Colour::fromString("#FF15B0B3");
		colourMap[786] = Colour::fromString("#FF15B0B3");
		colourMap[922] = Colour::fromString("#FF0E9684");
		colourMap[335] = Colour::fromString("#FF0E9684");
		colourMap[368] = Colour::fromString("#FF0E9684");
		colourMap[540] = Colour::fromString("#FF0E9684");
		colourMap[692] = Colour::fromString("#FF0E9684");
		colourMap[888] = Colour::fromString("#FF0E9684");
		colourMap[895] = Colour::fromString("#FF0D9F91");
		colourMap[836] = Colour::fromString("#FF0D9F91");
		colourMap[427] = Colour::fromString("#FF0D9F91");
		colourMap[988] = Colour::fromString("#FF0D9F91");
		colourMap[977] = Colour::fromString("#FF0D9F91");
		colourMap[1045] = Colour::fromString("#FF0D9F91");
		colourMap[698] = Colour::fromString("#FF9AD2BD");
		colourMap[507] = Colour::fromString("#FF9AD2BD");
		colourMap[212] = Colour::fromString("#FF82C7AE");
		colourMap[220] = Colour::fromString("#FF82C7AE");
		colourMap[228] = Colour::fromString("#FF9AD2BD");
		colourMap[236] = Colour::fromString("#FF82C7AE");
		colourMap[244] = Colour::fromString("#FF9AD2BD");
		colourMap[151] = Colour::fromString("#FF9DF0D2");
		colourMap[188] = Colour::fromString("#FF9DF0D2");
		colourMap[196] = Colour::fromString("#FF95E4C8");
		colourMap[204] = Colour::fromString("#FF9DF0D2");
		colourMap[159] = Colour::fromString("#FF54BF94");
		colourMap[167] = Colour::fromString("#FF54BF94");
		colourMap[175] = Colour::fromString("#FF54BF94");
		colourMap[183] = Colour::fromString("#FF54BF94");
		colourMap[191] = Colour::fromString("#FF54BF94");
		colourMap[199] = Colour::fromString("#FF54BF94");
		colourMap[160] = Colour::fromString("#FF54BF94");
		colourMap[168] = Colour::fromString("#FF54BF94");
		colourMap[589] = Colour::fromString("#FF62D09F");
		colourMap[597] = Colour::fromString("#FF62D09F");
		colourMap[297] = Colour::fromString("#FF62D09F");
		colourMap[1034] = Colour::fromString("#FF62D09F");
		colourMap[1042] = Colour::fromString("#FF62D09F");
		colourMap[1050] = Colour::fromString("#FF62D09F");
		colourMap[1059] = Colour::fromString("#FF62D09F");
		colourMap[605] = Colour::fromString("#FF62D09F");
		colourMap[306] = Colour::fromString("#FF62D09F");
		colourMap[1067] = Colour::fromString("#FF62D09F");
		colourMap[1075] = Colour::fromString("#FF62D09F");
		colourMap[1082] = Colour::fromString("#FF62D09F");
		colourMap[814] = Colour::fromString("#FFA4DAA4");
		colourMap[496] = Colour::fromString("#FFA4DAA4");
		colourMap[535] = Colour::fromString("#FFA4DAA4");
		colourMap[360] = Colour::fromString("#FFA4DAA4");
		colourMap[646] = Colour::fromString("#FFA4DAA4");
		colourMap[267] = Colour::fromString("#FFA4DAA4");
		colourMap[961] = Colour::fromString("#FF6ACBBA");
		colourMap[152] = Colour::fromString("#FF6ACBBA");
		colourMap[276] = Colour::fromString("#FF6ACBBA");
		colourMap[284] = Colour::fromString("#FF6ACBBA");
		colourMap[291] = Colour::fromString("#FF6ACBBA");
		colourMap[619] = Colour::fromString("#FF95E4C8");
		colourMap[392] = Colour::fromString("#FF95E4C8");
		colourMap[260] = Colour::fromString("#FF95E4C8");
		colourMap[268] = Colour::fromString("#FF95E4C8");
		colourMap[1139] = Colour::fromString("#FF95E4C8");
		colourMap[631] = Colour::fromString("#FF61E7B7");
		colourMap[639] = Colour::fromString("#FF61E7B7");
		colourMap[192] = Colour::fromString("#FF61E7B7");
		colourMap[200] = Colour::fromString("#FF61E7B7");
		colourMap[208] = Colour::fromString("#FF61E7B7");
		colourMap[647] = Colour::fromString("#FF61E7B7");
		colourMap[655] = Colour::fromString("#FF61E7B7");
		colourMap[584] = Colour::fromString("#FF61E7B7");
		colourMap[376] = Colour::fromString("#FF61E7B7");
		colourMap[216] = Colour::fromString("#FF61E7B7");
		colourMap[224] = Colour::fromString("#FF61E7B7");
		colourMap[232] = Colour::fromString("#FF61E7B7");
		colourMap[663] = Colour::fromString("#FF61E7B7");
		colourMap[592] = Colour::fromString("#FF61E7B7");
		colourMap[383] = Colour::fromString("#FF61E7B7");
		colourMap[240] = Colour::fromString("#FF61E7B7");
		colourMap[248] = Colour::fromString("#FF61E7B7");
		colourMap[256] = Colour::fromString("#FF61E7B7");
		colourMap[788] = Colour::fromString("#FF59DAAB");
		colourMap[400] = Colour::fromString("#FF59DAAB");
		colourMap[408] = Colour::fromString("#FF59DAAB");
		colourMap[416] = Colour::fromString("#FF59DAAB");
		colourMap[424] = Colour::fromString("#FF59DAAB");
		colourMap[566] = Colour::fromString("#FFA8ECD3");
		colourMap[517] = Colour::fromString("#FFA8ECD3");
		colourMap[1140] = Colour::fromString("#FFA8ECD3");
		colourMap[1141] = Colour::fromString("#FFA8ECD3");
		colourMap[1142] = Colour::fromString("#FFA8ECD3");
		colourMap[1089] = Colour::fromString("#FF7ED04B");
		colourMap[1080] = Colour::fromString("#FF7ED04B");
		colourMap[375] = Colour::fromString("#FF7ED04B");
		colourMap[382] = Colour::fromString("#FF7ED04B");
		colourMap[391] = Colour::fromString("#FF7ED04B");
		colourMap[399] = Colour::fromString("#FF7ED04B");
		colourMap[407] = Colour::fromString("#FF66A83D");
		colourMap[415] = Colour::fromString("#FF7ED04B");
		colourMap[423] = Colour::fromString("#FF7ED04B");
		colourMap[431] = Colour::fromString("#FF7ED04B");
		colourMap[438] = Colour::fromString("#FF7ED04B");
		colourMap[446] = Colour::fromString("#FF66A83D");
		colourMap[454] = Colour::fromString("#FF7ED04B");
		colourMap[463] = Colour::fromString("#FF7ED04B");
		colourMap[471] = Colour::fromString("#FF7ED04B");
		colourMap[479] = Colour::fromString("#FF7ED04B");
		colourMap[486] = Colour::fromString("#FF7ED04B");
		colourMap[495] = Colour::fromString("#FF66A83D");
		colourMap[504] = Colour::fromString("#FF7ED04B");
		colourMap[726] = Colour::fromString("#FF7ED04B");
		colourMap[10703] = Colour::fromString("#FF7ED04B");
		colourMap[10704] = Colour::fromString("#FF7ED04B");
		colourMap[632] = Colour::fromString("#FF66A83D");
		colourMap[10702] = Colour::fromString("#FF7ED04B");
		colourMap[734] = Colour::fromString("#FF7ED04B");
		colourMap[742] = Colour::fromString("#FF7ED04B");
		colourMap[751] = Colour::fromString("#FF7ED04B");
		colourMap[758] = Colour::fromString("#FF7ED04B");
		colourMap[766] = Colour::fromString("#FF7ED04B");
		colourMap[775] = Colour::fromString("#FF7ED04B");
		colourMap[782] = Colour::fromString("#FF7ED04B");
		colourMap[790] = Colour::fromString("#FF7ED04B");
		colourMap[799] = Colour::fromString("#FF7ED04B");
		colourMap[807] = Colour::fromString("#FF7ED04B");
		colourMap[815] = Colour::fromString("#FF7ED04B");
		colourMap[823] = Colour::fromString("#FF7ED04B");
		colourMap[982] = Colour::fromString("#FF7ED04B");
		colourMap[19] = Colour::fromString("#FF7ED04B");
		colourMap[822] = Colour::fromString("#FF32B825");
		colourMap[909] = Colour::fromString("#FF32B825");
		colourMap[918] = Colour::fromString("#FF32B825");
		colourMap[1121] = Colour::fromString("#FF32B825");
		colourMap[20] = Colour::fromString("#FF32B825");
		colourMap[999] = Colour::fromString("#FF32B825");
		colourMap[715] = Colour::fromString("#FF32B825");
		colourMap[764] = Colour::fromString("#FF32B825");
		colourMap[52] = Colour::fromString("#FF32B825");
		colourMap[92] = Colour::fromString("#FF32B825");
		colourMap[312] = Colour::fromString("#FF32B825");
		colourMap[139] = Colour::fromString("#FF32B825");
		colourMap[387] = Colour::fromString("#FF32B825");
		colourMap[28] = Colour::fromString("#FF32B825");
		colourMap[60] = Colour::fromString("#FF32B825");
		colourMap[926] = Colour::fromString("#FF32B825");
		colourMap[526] = Colour::fromString("#FF32B825");
		colourMap[543] = Colour::fromString("#FF32B825");
		colourMap[468] = Colour::fromString("#FF32B825");
		colourMap[508] = Colour::fromString("#FF32B825");
		colourMap[664] = Colour::fromString("#FF32B825");
		colourMap[712] = Colour::fromString("#FF32B825");
		colourMap[727] = Colour::fromString("#FF32B825");
		colourMap[550] = Colour::fromString("#FF32B825");
		colourMap[743] = Colour::fromString("#FF32B825");
		colourMap[934] = Colour::fromString("#FF32B825");
		colourMap[259] = Colour::fromString("#FF32B825");
		colourMap[324] = Colour::fromString("#FF32B825");
		colourMap[371] = Colour::fromString("#FF32B825");
		colourMap[419] = Colour::fromString("#FF32B825");
		colourMap[1133] = Colour::fromString("#FF32B825");
		colourMap[843] = Colour::fromString("#FF72D569");
		colourMap[10693] = Colour::fromString("#FF72D569");
		colourMap[10694] = Colour::fromString("#FF72D569");
		colourMap[10695] = Colour::fromString("#FF72D569");
		colourMap[1037] = Colour::fromString("#FF48C83C");
		colourMap[10696] = Colour::fromString("#FF48C83C");
		colourMap[10697] = Colour::fromString("#FF48C83C");
		colourMap[10698] = Colour::fromString("#FF48C83C");
		colourMap[1084] = Colour::fromString("#FF59B947");
		colourMap[10699] = Colour::fromString("#FF59B947");
		colourMap[10700] = Colour::fromString("#FF59B947");
		colourMap[10701] = Colour::fromString("#FF59B947");
		colourMap[502] = Colour::fromString("#FF4FC244");
		colourMap[509] = Colour::fromString("#FF4FC244");
		colourMap[829] = Colour::fromString("#FF4FC244");
		colourMap[845] = Colour::fromString("#FF4BB547");
		colourMap[837] = Colour::fromString("#FF4FC244");
		colourMap[518] = Colour::fromString("#FF4FC244");
		colourMap[853] = Colour::fromString("#FF4FC244");
		colourMap[870] = Colour::fromString("#FF4BB547");
		colourMap[861] = Colour::fromString("#FF4FC244");
		colourMap[484682470] = Colour::fromString("#FF58BA48");
		colourMap[484682475] = Colour::fromString("#FF58BA48");
		colourMap[484682479] = Colour::fromString("#FF58BA48");
		colourMap[484682483] = Colour::fromString("#FF56B84B");
		colourMap[484682487] = Colour::fromString("#FF58BA48");
		colourMap[484682492] = Colour::fromString("#FF58BA48");
		colourMap[484682496] = Colour::fromString("#FF58BA48");
		colourMap[484682500] = Colour::fromString("#FF56B84B");
		colourMap[484682504] = Colour::fromString("#FF58BA48");
		colourMap[484682508] = Colour::fromString("#FF33B932");
		colourMap[703] = Colour::fromString("#FF8ADA87");
		colourMap[16] = Colour::fromString("#FF8ADA87");
		colourMap[583] = Colour::fromString("#FF8ADA87");
		colourMap[942] = Colour::fromString("#FFA0EE9D");
		colourMap[952] = Colour::fromString("#FFA0EE9D");
		colourMap[966] = Colour::fromString("#FFA0EE9D");
		colourMap[131] = Colour::fromString("#FF90EB8D");
		colourMap[295] = Colour::fromString("#FF9DE79C");
		colourMap[303] = Colour::fromString("#FF9DE79C");
		colourMap[311] = Colour::fromString("#FF9DE79C");
		colourMap[451] = Colour::fromString("#FF9DE79C");
		colourMap[319] = Colour::fromString("#FF84EA81");
		colourMap[327] = Colour::fromString("#FF84EA81");
		colourMap[334] = Colour::fromString("#FF84EA81");
		colourMap[780] = Colour::fromString("#FF97EC93");
		colourMap[623] = Colour::fromString("#FF98D6F9");
		colourMap[477] = Colour::fromString("#FF98D6F9");
		colourMap[485] = Colour::fromString("#FF98D6F9");
		colourMap[672] = Colour::fromString("#FF98D6F9");
		colourMap[493] = Colour::fromString("#FF80CDF8");
		colourMap[56] = Colour::fromString("#FF80CDF8");
		colourMap[998] = Colour::fromString("#FF80CDF8");
		colourMap[754] = Colour::fromString("#FF80CDF8");
		colourMap[481] = Colour::fromString("#FF80CDF8");
		colourMap[489] = Colour::fromString("#FF80CDF8");
		colourMap[144] = Colour::fromString("#FF80CDF8");
		colourMap[458] = Colour::fromString("#FF80CDF8");
		colourMap[465] = Colour::fromString("#FF80CDF8");
		colourMap[473] = Colour::fromString("#FF80CDF8");
		colourMap[549009199] = Colour::fromString("#FF80CDF8");
		colourMap[275] = Colour::fromString("#FF90CBED");
		colourMap[242] = Colour::fromString("#FF90CBED");
		colourMap[250] = Colour::fromString("#FF90CBED");
		colourMap[258] = Colour::fromString("#FF90CBED");
		colourMap[266] = Colour::fromString("#FF90CBED");
		colourMap[310] = Colour::fromString("#FF90CBED");
		colourMap[333] = Colour::fromString("#FF90CBED");
		colourMap[278] = Colour::fromString("#FF80C0E2");
		colourMap[23] = Colour::fromString("#FF80C0E2");
		colourMap[292] = Colour::fromString("#FF80C0E2");
		colourMap[536] = Colour::fromString("#FF80C0E2");
		colourMap[544] = Colour::fromString("#FF80C0E2");
		colourMap[551] = Colour::fromString("#FF80C0E2");
		colourMap[559] = Colour::fromString("#FF80C0E2");
		colourMap[1105] = Colour::fromString("#FF80C0E2");
		colourMap[403] = Colour::fromString("#FF80C0E2");
		colourMap[411] = Colour::fromString("#FF80C0E2");
		colourMap[418] = Colour::fromString("#FF80C0E2");
		colourMap[426] = Colour::fromString("#FF80C0E2");
		colourMap[472] = Colour::fromString("#FF80C0E2");
		colourMap[480] = Colour::fromString("#FF80C0E2");
		colourMap[487] = Colour::fromString("#FF80C0E2");
		colourMap[435] = Colour::fromString("#FF80C0E2");
		colourMap[803] = Colour::fromString("#FF8599CC");
		colourMap[818] = Colour::fromString("#FF8599CC");
		colourMap[1022] = Colour::fromString("#FF8599CC");
		colourMap[1031] = Colour::fromString("#FF8599CC");
		colourMap[835] = Colour::fromString("#FFA2B1D8");
		colourMap[342] = Colour::fromString("#FFA2B1D8");
		colourMap[298] = Colour::fromString("#FFA2B1D8");
		colourMap[826] = Colour::fromString("#FF96A7D3");
		colourMap[904] = Colour::fromString("#FF96A7D3");
		colourMap[564] = Colour::fromString("#FF96A7D3");
		colourMap[596] = Colour::fromString("#FF96A7D3");
		colourMap[581] = Colour::fromString("#FF96A7D3");
		colourMap[809] = Colour::fromString("#FFB3C0DF");
		colourMap[351] = Colour::fromString("#FFB3C0DF");
		colourMap[359] = Colour::fromString("#FFB3C0DF");
		colourMap[537] = Colour::fromString("#FFB3C0DF");
		colourMap[498] = Colour::fromString("#FFB3C0DF");
		colourMap[505] = Colour::fromString("#FFB3C0DF");
		colourMap[513] = Colour::fromString("#FFB3C0DF");
		colourMap[546] = Colour::fromString("#FFB3C0DF");
		colourMap[521] = Colour::fromString("#FFB3C0DF");
		colourMap[554] = Colour::fromString("#FFB3C0DF");
		colourMap[562] = Colour::fromString("#FFB3C0DF");
		colourMap[529] = Colour::fromString("#FFB3C0DF");
		colourMap[367] = Colour::fromString("#FFB3C0DF");
		colourMap[569] = Colour::fromString("#FFB3C0DF");
		colourMap[578] = Colour::fromString("#FFB3C0DF");
		colourMap[585] = Colour::fromString("#FFB3C0DF");
		colourMap[594] = Colour::fromString("#FFB3C0DF");
		colourMap[602] = Colour::fromString("#FFB3C0DF");
		colourMap[287] = Colour::fromString("#FFB3C0DF");
		colourMap[343] = Colour::fromString("#FFFF7080");
		colourMap[1129] = Colour::fromString("#FFFF7080");
		colourMap[549] = Colour::fromString("#FFFF7080");
		colourMap[864] = Colour::fromString("#FFFF8084");
		colourMap[637] = Colour::fromString("#FFFF8084");
		colourMap[629] = Colour::fromString("#FFFF8084");
		colourMap[685] = Colour::fromString("#FFFF8084");
		colourMap[709] = Colour::fromString("#FFFF8084");
		colourMap[718] = Colour::fromString("#FFFF8084");
		colourMap[725] = Colour::fromString("#FFFF8084");
		colourMap[733] = Colour::fromString("#FFFF8084");
		colourMap[741] = Colour::fromString("#FFFF8084");
		colourMap[563807435] = Colour::fromString("#FFFF8084");
		colourMap[406] = Colour::fromString("#FFFF8084");
		colourMap[414] = Colour::fromString("#FFFF8084");
		colourMap[422] = Colour::fromString("#FFFF8084");
		colourMap[609] = Colour::fromString("#FFFF8084");
		colourMap[1044] = Colour::fromString("#FFFF8084");
		colourMap[1008] = Colour::fromString("#FFFF8084");
		colourMap[475] = Colour::fromString("#FFFF8084");
		colourMap[1072] = Colour::fromString("#FFFF8084");
		colourMap[1079] = Colour::fromString("#FFFF8084");
		colourMap[1088] = Colour::fromString("#FFFF8084");
		colourMap[170] = Colour::fromString("#FFFF8084");
		colourMap[496345664] = Colour::fromString("#FFFF8084");
		colourMap[496345668] = Colour::fromString("#FFFF8084");
		colourMap[496345672] = Colour::fromString("#FFFF8084");
		colourMap[856] = Colour::fromString("#FFFF909F");
		colourMap[138] = Colour::fromString("#FFFF909F");
		colourMap[218] = Colour::fromString("#FFFF909F");
		colourMap[1020] = Colour::fromString("#FFFF909F");
		colourMap[1029] = Colour::fromString("#FFFF909F");
		colourMap[325] = Colour::fromString("#FFFF909F");
		colourMap[560581551] = Colour::fromString("#FFFF909F");
		colourMap[560581555] = Colour::fromString("#FFFF909F");
		colourMap[239] = Colour::fromString("#FFFF909F");
		colourMap[255] = Colour::fromString("#FFFF909F");
		colourMap[127] = Colour::fromString("#FFFF909F");
		colourMap[1096] = Colour::fromString("#FFFF909F");
		colourMap[1104] = Colour::fromString("#FFFF909F");
		colourMap[64] = Colour::fromString("#FFFF909F");
		colourMap[1120] = Colour::fromString("#FFFF909F");
		colourMap[1113] = Colour::fromString("#FFFF909F");
		colourMap[155] = Colour::fromString("#FFFF909F");
		colourMap[444] = Colour::fromString("#FFFF909F");
		colourMap[59] = Colour::fromString("#FFFF909F");
		colourMap[362] = Colour::fromString("#FFFF909F");
		colourMap[617] = Colour::fromString("#FFFF909F");
		colourMap[626] = Colour::fromString("#FFFF909F");
		colourMap[636] = Colour::fromString("#FFFF909F");
		colourMap[366] = Colour::fromString("#FFFF909F");
		colourMap[1077] = Colour::fromString("#FFFF909F");
		colourMap[571] = Colour::fromString("#FFFF909F");
		colourMap[149] = Colour::fromString("#FFFF909F");
		colourMap[15] = Colour::fromString("#FFFF909F");
		colourMap[181] = Colour::fromString("#FFFF909F");
		colourMap[560581559] = Colour::fromString("#FFFF909F");
		colourMap[51] = Colour::fromString("#FFFF909F");
		colourMap[189] = Colour::fromString("#FFFF909F");
		colourMap[599] = Colour::fromString("#FFFF909F");
		colourMap[907] = Colour::fromString("#FFFF909F");
		colourMap[575] = Colour::fromString("#FFFF909F");
		colourMap[930] = Colour::fromString("#FFFF909F");
		colourMap[560581563] = Colour::fromString("#FFFF909F");
		colourMap[262] = Colour::fromString("#FFFF909F");
		colourMap[1014] = Colour::fromString("#FFFF909F");
		colourMap[27] = Colour::fromString("#FFFF909F");
		colourMap[563807439] = Colour::fromString("#FFFF909F");
		colourMap[178] = Colour::fromString("#FFFF909F");
		colourMap[300] = Colour::fromString("#FFFF909F");
		colourMap[316] = Colour::fromString("#FFFF909F");
		colourMap[321] = Colour::fromString("#FFFF909F");
		colourMap[958] = Colour::fromString("#FFFF909F");
		colourMap[483] = Colour::fromString("#FFFF909F");
		colourMap[186] = Colour::fromString("#FFFF909F");
		colourMap[953] = Colour::fromString("#FFFF909F");
		colourMap[1097] = Colour::fromString("#FFE64438");
		colourMap[157] = Colour::fromString("#FFFF5D50");
		colourMap[390] = Colour::fromString("#FFFF5D50");
		colourMap[332] = Colour::fromString("#FFFF5D50");
		colourMap[432] = Colour::fromString("#FFFF5D50");
		colourMap[38] = Colour::fromString("#FFFF5D50");
		colourMap[71] = Colour::fromString("#FFFF5D50");
		colourMap[47] = Colour::fromString("#FFFF5D50");
		colourMap[79] = Colour::fromString("#FFFF5D50");
		colourMap[103] = Colour::fromString("#FFFF5D50");
		colourMap[652] = Colour::fromString("#FFFF5D50");
		colourMap[660] = Colour::fromString("#FFFF5D50");
		colourMap[94] = Colour::fromString("#FFFF5D50");
		colourMap[55] = Colour::fromString("#FFFF5D50");
		colourMap[87] = Colour::fromString("#FFFF5D50");
		colourMap[110] = Colour::fromString("#FFFF5D50");
		colourMap[30] = Colour::fromString("#FFFF5D50");
		colourMap[118] = Colour::fromString("#FFFF5D50");
		colourMap[223] = Colour::fromString("#FFFF5D50");
		colourMap[141] = Colour::fromString("#FFFF5547");
		colourMap[72] = Colour::fromString("#FFFF5547");
		colourMap[80] = Colour::fromString("#FFFF5547");
		colourMap[263] = Colour::fromString("#FFFF5547");
		colourMap[272] = Colour::fromString("#FFFF5547");
		colourMap[830] = Colour::fromString("#FFFF5547");
		colourMap[668] = Colour::fromString("#FFFF5547");
		colourMap[676] = Colour::fromString("#FFFF5547");
		colourMap[684] = Colour::fromString("#FFFF5547");
		colourMap[452] = Colour::fromString("#FFFF5547");
		colourMap[523] = Colour::fromString("#FFFF5547");
		colourMap[763] = Colour::fromString("#FFFF5547");
		colourMap[914] = Colour::fromString("#FFFF5547");
		colourMap[1109] = Colour::fromString("#FFFF5547");
		colourMap[1124] = Colour::fromString("#FFFF5547");
		colourMap[126] = Colour::fromString("#FFFF5547");
		colourMap[133] = Colour::fromString("#FFFF5547");
		colourMap[347] = Colour::fromString("#FFFF5547");
		colourMap[286] = Colour::fromString("#FFFF5547");
		colourMap[338] = Colour::fromString("#FFFF5547");
		colourMap[689] = Colour::fromString("#FFFF5547");
		colourMap[467] = Colour::fromString("#FFFF4C3E");
		colourMap[88] = Colour::fromString("#FFFF4C3E");
		colourMap[700] = Colour::fromString("#FFFF4C3E");
		colourMap[708] = Colour::fromString("#FFFF4C3E");
		colourMap[716] = Colour::fromString("#FFFF4C3E");
		colourMap[724] = Colour::fromString("#FFFF4C3E");
		colourMap[331] = Colour::fromString("#FFFF4C3E");
		colourMap[210] = Colour::fromString("#FFFF4C3E");
		colourMap[491] = Colour::fromString("#FFFF4C3E");
		colourMap[732] = Colour::fromString("#FFFF4C3E");
		colourMap[525] = Colour::fromString("#FFFF4C3E");
		colourMap[1110] = Colour::fromString("#FFFF4C3E");
		colourMap[1118] = Colour::fromString("#FFFF4C3E");
		colourMap[557] = Colour::fromString("#FFFF4C3E");
		colourMap[1126] = Colour::fromString("#FFFF4C3E");
		colourMap[1] = Colour::fromString("#FFFF4C3E");
		colourMap[515] = Colour::fromString("#FFFF4C3E");
		colourMap[740] = Colour::fromString("#FFFF4C3E");
		colourMap[748] = Colour::fromString("#FFFF4C3E");
		colourMap[756] = Colour::fromString("#FFFF4C3E");
		colourMap[980] = Colour::fromString("#FFFF4C3E");
		colourMap[1004] = Colour::fromString("#FFFF4C3E");
		colourMap[63] = Colour::fromString("#FFFF4C3E");
		colourMap[439] = Colour::fromString("#FFFF4C3E");
		colourMap[447] = Colour::fromString("#FFFF4C3E");
		colourMap[455] = Colour::fromString("#FFFF4C3E");
		colourMap[464] = Colour::fromString("#FFFF4C3E");
		colourMap[693] = Colour::fromString("#FFFF4C3E");
		colourMap[761] = Colour::fromString("#FFFF4C3E");
		colourMap[769] = Colour::fromString("#FFFF4C3E");
		colourMap[777] = Colour::fromString("#FFFF4C3E");
		colourMap[785] = Colour::fromString("#FFFF4C3E");
		colourMap[946] = Colour::fromString("#FFFF4C3E");
		colourMap[290] = Colour::fromString("#FFF2483B");
		colourMap[194] = Colour::fromString("#FFF2483B");
		colourMap[226] = Colour::fromString("#FFF2483B");
		colourMap[356] = Colour::fromString("#FFF2483B");
		colourMap[364] = Colour::fromString("#FFF2483B");
		colourMap[173] = Colour::fromString("#FFF2483B");
		colourMap[470] = Colour::fromString("#FFF2483B");
		colourMap[614] = Colour::fromString("#FFF2483B");
		colourMap[797] = Colour::fromString("#FFF2483B");
		colourMap[796] = Colour::fromString("#FFF2483B");
		colourMap[804] = Colour::fromString("#FFF2483B");
		colourMap[10671] = Colour::fromString("#FFF2483B");
		colourMap[313] = Colour::fromString("#FFFF64FF");
		colourMap[339] = Colour::fromString("#FFFF7AFF");
		colourMap[302] = Colour::fromString("#FFFF7AFF");
		colourMap[851] = Colour::fromString("#FFFF7AFF");
		colourMap[842] = Colour::fromString("#FFFF7AFF");
		colourMap[834] = Colour::fromString("#FFFF7AFF");
		colourMap[4] = Colour::fromString("#FFFF7AFF");
		colourMap[811] = Colour::fromString("#FFFF7AFF");
		colourMap[820] = Colour::fromString("#FFFF7AFF");
		colourMap[828] = Colour::fromString("#FFFF7AFF");
		colourMap[580] = Colour::fromString("#FFFF7AFF");
		colourMap[271] = Colour::fromString("#FFFF7AFF");
		colourMap[874] = Colour::fromString("#FFFF7AFF");
		colourMap[460] = Colour::fromString("#FFFF7AFF");
		colourMap[323] = Colour::fromString("#FFFF90FF");
		colourMap[381] = Colour::fromString("#FFFF90FF");
		colourMap[749] = Colour::fromString("#FFFF90FF");
		colourMap[246] = Colour::fromString("#FFFF90FF");
		colourMap[128] = Colour::fromString("#FFFF90FF");
		colourMap[539] = Colour::fromString("#FFFF90FF");
		colourMap[548] = Colour::fromString("#FFFF90FF");
		colourMap[555] = Colour::fromString("#FFFF90FF");
		colourMap[294] = Colour::fromString("#FFFF90FF");
		colourMap[26] = Colour::fromString("#FFFF90FF");
		colourMap[42] = Colour::fromString("#FFFF90FF");
		colourMap[17] = Colour::fromString("#FFFF90FF");
		colourMap[10] = Colour::fromString("#FFFF90FF");
		colourMap[494] = Colour::fromString("#FFFF90FF");
		colourMap[503] = Colour::fromString("#FFFF90FF");
		colourMap[511] = Colour::fromString("#FFFF90FF");
		colourMap[795] = Colour::fromString("#FFFF90FF");
		colourMap[50] = Colour::fromString("#FFFF90FF");
		colourMap[67] = Colour::fromString("#FFFF90FF");
		colourMap[587] = Colour::fromString("#FFFF90FF");
		colourMap[1100] = Colour::fromString("#FFFF90FF");
		colourMap[215] = Colour::fromString("#FFFF90FF");
		colourMap[531] = Colour::fromString("#FFFF90FF");
		colourMap[628] = Colour::fromString("#FFFF90FF");
		colourMap[634] = Colour::fromString("#FFFF90FF");
		colourMap[706] = Colour::fromString("#FFFF90FF");
		colourMap[1061] = Colour::fromString("#FFFF90FF");
		colourMap[549009203] = Colour::fromString("#FFFF90FF");
		colourMap[549009207] = Colour::fromString("#FFFF90FF");
		colourMap[616] = Colour::fromString("#FFFF90FF");
		colourMap[214] = Colour::fromString("#FFFF90FF");
		colourMap[35] = Colour::fromString("#FFFF90FF");
		colourMap[549009211] = Colour::fromString("#FFFF90FF");
		colourMap[975] = Colour::fromString("#FFFF90FF");
		colourMap[115] = Colour::fromString("#FFFF90FF");
		colourMap[757] = Colour::fromString("#FFFF90FF");
		colourMap[231] = Colour::fromString("#FFFF90FF");
		colourMap[66] = Colour::fromString("#FFFF90FF");
		colourMap[75] = Colour::fromString("#FFFF90FF");
		colourMap[58] = Colour::fromString("#FFFF90FF");
		colourMap[615] = Colour::fromString("#FFFF90FF");
		colourMap[348] = Colour::fromString("#FFFF90FF");
		colourMap[374] = Colour::fromString("#FFFFA6FF");
		colourMap[1052] = Colour::fromString("#FFFFA6FF");
		colourMap[165] = Colour::fromString("#FFFFA6FF");
		colourMap[12] = Colour::fromString("#FFFFA6FF");
		colourMap[100] = Colour::fromString("#FFFFA6FF");
		colourMap[197] = Colour::fromString("#FFFFA6FF");
		colourMap[591] = Colour::fromString("#FFFFA6FF");
		colourMap[872] = Colour::fromString("#FFFFA6FF");
		colourMap[1065] = Colour::fromString("#FFFF9B88");
		colourMap[771] = Colour::fromString("#FFFF9B88");
		colourMap[1132] = Colour::fromString("#FFFFAE6F");
		colourMap[612] = Colour::fromString("#FFFFAE6F");
		colourMap[82] = Colour::fromString("#FFFFAE6F");
		colourMap[90] = Colour::fromString("#FFFFAE6F");
		colourMap[99] = Colour::fromString("#FFFFAE6F");
		colourMap[7] = Colour::fromString("#FFFFAE6F");
		colourMap[867] = Colour::fromString("#FFFFAE6F");
		colourMap[123] = Colour::fromString("#FFFFAE6F");
		colourMap[881] = Colour::fromString("#FFFFAE6F");
		colourMap[860] = Colour::fromString("#FFFFAE6F");
		colourMap[868] = Colour::fromString("#FFFFAE6F");
		colourMap[875] = Colour::fromString("#FFFFAE6F");
		colourMap[883] = Colour::fromString("#FFFFAE6F");
		colourMap[891] = Colour::fromString("#FFFFAE6F");
		colourMap[890] = Colour::fromString("#FFFFAE6F");
		colourMap[899] = Colour::fromString("#FFFFAE6F");
		colourMap[915] = Colour::fromString("#FFFFAE6F");
		colourMap[923] = Colour::fromString("#FFFFAE6F");
		colourMap[398] = Colour::fromString("#FFFFAE6F");
		colourMap[122] = Colour::fromString("#FFFFAE6F");
		colourMap[105] = Colour::fromString("#FFFFAE6F");
		colourMap[114] = Colour::fromString("#FFFFAE6F");
		colourMap[987] = Colour::fromString("#FFFFBA86");
		colourMap[280] = Colour::fromString("#FFFFBA86");
		colourMap[880] = Colour::fromString("#FFFFBA86");
		colourMap[283] = Colour::fromString("#FFFFBA86");
		colourMap[898] = Colour::fromString("#FFFFBA86");
		colourMap[931] = Colour::fromString("#FFFFBA86");
		colourMap[1093] = Colour::fromString("#FFFFBA86");
		colourMap[552] = Colour::fromString("#FFFFBA86");
		colourMap[318] = Colour::fromString("#FFFFBA86");
		colourMap[462] = Colour::fromString("#FFFFBA86");
		colourMap[534] = Colour::fromString("#FFFFBA86");
		colourMap[574] = Colour::fromString("#FFFFBA86");
		colourMap[621] = Colour::fromString("#FFFFBA86");
		colourMap[549009215] = Colour::fromString("#FFFFBA86");
		colourMap[549009219] = Colour::fromString("#FFFFBA86");
		colourMap[549009223] = Colour::fromString("#FFFFBA86");
		colourMap[549009227] = Colour::fromString("#FFFFBA86");
		colourMap[1117] = Colour::fromString("#FFFFC395");
		colourMap[679] = Colour::fromString("#FFFFC395");
		colourMap[137] = Colour::fromString("#FFFFC395");
		colourMap[130] = Colour::fromString("#FFFFC395");
		colourMap[147] = Colour::fromString("#FFFFC395");
		colourMap[162] = Colour::fromString("#FFFFC395");
		colourMap[604] = Colour::fromString("#FFFFC395");
		colourMap[146] = Colour::fromString("#FFFFC395");
		colourMap[238] = Colour::fromString("#FFFFC395");
		colourMap[350] = Colour::fromString("#FFFFC395");
		colourMap[358] = Colour::fromString("#FFFFC395");
		colourMap[354] = Colour::fromString("#FFFF9BCD");
		colourMap[386] = Colour::fromString("#FFFFA5D2");
		colourMap[207] = Colour::fromString("#FFFFA5D2");
		colourMap[607] = Colour::fromString("#FFFFA5D2");
		colourMap[112] = Colour::fromString("#FFFFA5D2");
		colourMap[560] = Colour::fromString("#FFFFA5D2");
		colourMap[96] = Colour::fromString("#FFFFA5D2");
		colourMap[101] = Colour::fromString("#FFFFA5D2");
		colourMap[720] = Colour::fromString("#FFFFA5D2");
		colourMap[711] = Colour::fromString("#FFFFA5D2");
		colourMap[1039] = Colour::fromString("#FFFFA5D2");
		colourMap[903] = Colour::fromString("#FFFFA5D2");
		colourMap[642] = Colour::fromString("#FFFFA5D2");
		colourMap[651] = Colour::fromString("#FFFFA5D2");
		colourMap[659] = Colour::fromString("#FFFFA5D2");
		colourMap[666] = Colour::fromString("#FFFFA5D2");
		colourMap[674] = Colour::fromString("#FFFFA5D2");
		colourMap[682] = Colour::fromString("#FFFFA5D2");
		colourMap[691] = Colour::fromString("#FFFFA5D2");
		colourMap[429] = Colour::fromString("#FFFFA5D2");
		colourMap[437] = Colour::fromString("#FFFFA5D2");
		colourMap[445] = Colour::fromString("#FFFFA5D2");
		colourMap[77] = Colour::fromString("#FFFFA5D2");
		colourMap[53] = Colour::fromString("#FFFFA5D2");
		colourMap[61] = Colour::fromString("#FFFFA5D2");
		colourMap[45] = Colour::fromString("#FFFFA5D2");
		colourMap[69] = Colour::fromString("#FFFFA5D2");
		colourMap[789] = Colour::fromString("#FFFFA5D2");
		colourMap[370] = Colour::fromString("#FFFFB3D9");
		colourMap[653] = Colour::fromString("#FFFFB3D9");
		colourMap[568] = Colour::fromString("#FFFFB3D9");
		colourMap[661] = Colour::fromString("#FFFFB3D9");
		colourMap[576] = Colour::fromString("#FFFFB3D9");
		colourMap[640] = Colour::fromString("#FFFFB3D9");
		colourMap[135] = Colour::fromString("#FFFFB3D9");
		colourMap[939] = Colour::fromString("#FFFFB3D9");
		colourMap[143] = Colour::fromString("#FFFFB3D9");
		colourMap[839] = Colour::fromString("#FFFFB3D9");
		colourMap[887] = Colour::fromString("#FFFFB3D9");
		colourMap[1048] = Colour::fromString("#FFFFB3D9");
		colourMap[372] = Colour::fromString("#FFFFB3D9");
		colourMap[83] = Colour::fromString("#FFFFB3D9");
		colourMap[136] = Colour::fromString("#FFFFB3D9");
		colourMap[106] = Colour::fromString("#FFFFB3D9");
		colourMap[203] = Colour::fromString("#FFFFB3D9");
		colourMap[235] = Colour::fromString("#FFFFB3D9");
		colourMap[955] = Colour::fromString("#FFFFB3D9");
		colourMap[963] = Colour::fromString("#FFFFB3D9");
		colourMap[307] = Colour::fromString("#FFFFB3D9");
		colourMap[395] = Colour::fromString("#FFFFB3D9");
		colourMap[1098] = Colour::fromString("#FFFFB3D9");
		colourMap[1107] = Colour::fromString("#FFFFB3D9");
		colourMap[852] = Colour::fromString("#FFFFB3D9");
		colourMap[859] = Colour::fromString("#FFFFB3D9");
		colourMap[938] = Colour::fromString("#FFFFB3D9");
		colourMap[970] = Colour::fromString("#FFFFB3D9");
		colourMap[978] = Colour::fromString("#FFFFB3D9");
		colourMap[154] = Colour::fromString("#FFFFB3D9");
		colourMap[161] = Colour::fromString("#FFFFB3D9");
		colourMap[177] = Colour::fromString("#FFFFB3D9");
		colourMap[169] = Colour::fromString("#FFFFB3D9");
		colourMap[995] = Colour::fromString("#FFFFB3D9");
		colourMap[1069] = Colour::fromString("#FFFFB3D9");
		colourMap[185] = Colour::fromString("#FFFFB3D9");
		colourMap[193] = Colour::fromString("#FFFFB3D9");
		colourMap[701] = Colour::fromString("#FFFFB3D9");
		colourMap[209] = Colour::fromString("#FFFFB3D9");
		colourMap[202] = Colour::fromString("#FFFFB3D9");
		colourMap[225] = Colour::fromString("#FFFFB3D9");
		colourMap[217] = Colour::fromString("#FFFFB3D9");
		colourMap[765] = Colour::fromString("#FFFFB3D9");
		colourMap[773] = Colour::fromString("#FFFFB3D9");
		colourMap[781] = Colour::fromString("#FFFFB3D9");
		colourMap[76] = Colour::fromString("#FFFFB3D9");
		colourMap[379] = Colour::fromString("#FFFFC6E2");
		colourMap[206] = Colour::fromString("#FFFFC6E2");
		colourMap[230] = Colour::fromString("#FFFFC6E2");
		colourMap[222] = Colour::fromString("#FFFFC6E2");
		colourMap[512] = Colour::fromString("#FFF0F080");
		colourMap[528] = Colour::fromString("#FFF0F080");
		colourMap[645] = Colour::fromString("#FFFFFC91");
		colourMap[912] = Colour::fromString("#FFFFFC91");
		colourMap[10707] = Colour::fromString("#FFFFFC91");
		colourMap[10706] = Colour::fromString("#FFFFFC91");
		colourMap[10705] = Colour::fromString("#FFECE754");
		colourMap[920] = Colour::fromString("#FFFFFC91");
		colourMap[976] = Colour::fromString("#FFFFFC91");
		colourMap[10710] = Colour::fromString("#FFFFFC91");
		colourMap[10709] = Colour::fromString("#FFFFFC91");
		colourMap[10708] = Colour::fromString("#FFECE754");
		colourMap[984] = Colour::fromString("#FFFFFC91");
		colourMap[10713] = Colour::fromString("#FFFFFC91");
		colourMap[10712] = Colour::fromString("#FFFFFC91");
		colourMap[10711] = Colour::fromString("#FFECE754");
		colourMap[928] = Colour::fromString("#FFFFFC91");
		colourMap[992] = Colour::fromString("#FFFFFC91");
		colourMap[10716] = Colour::fromString("#FFFFFC91");
		colourMap[10715] = Colour::fromString("#FFFFFC91");
		colourMap[10714] = Colour::fromString("#FFECE754");
		colourMap[1001] = Colour::fromString("#FFFFFC91");
		colourMap[10719] = Colour::fromString("#FFFFFC91");
		colourMap[10718] = Colour::fromString("#FFFFFC91");
		colourMap[10717] = Colour::fromString("#FFECE754");
		colourMap[1091] = Colour::fromString("#FFFFFC91");
		colourMap[10722] = Colour::fromString("#FFFFFC91");
		colourMap[10721] = Colour::fromString("#FFFFFC91");
		colourMap[10720] = Colour::fromString("#FFECE754");
		colourMap[936] = Colour::fromString("#FFFFFC91");
		colourMap[10725] = Colour::fromString("#FFFFFC91");
		colourMap[10724] = Colour::fromString("#FFFFFC91");
		colourMap[10723] = Colour::fromString("#FFECE754");
		colourMap[944] = Colour::fromString("#FFFFFC91");
		colourMap[10728] = Colour::fromString("#FFFFFC91");
		colourMap[10727] = Colour::fromString("#FFFFFC91");
		colourMap[10726] = Colour::fromString("#FFECE754");
		colourMap[951] = Colour::fromString("#FFFFFC91");
		colourMap[10731] = Colour::fromString("#FFFFFC91");
		colourMap[10730] = Colour::fromString("#FFFFFC91");
		colourMap[10729] = Colour::fromString("#FFECE754");
		colourMap[957] = Colour::fromString("#FFFFFC91");
		colourMap[10734] = Colour::fromString("#FFFFFC91");
		colourMap[10733] = Colour::fromString("#FFFFFC91");
		colourMap[10732] = Colour::fromString("#FFECE754");
		colourMap[968] = Colour::fromString("#FFFFFC91");
		colourMap[10737] = Colour::fromString("#FFFFFC91");
		colourMap[10736] = Colour::fromString("#FFFFFC91");
		colourMap[10735] = Colour::fromString("#FFECE754");
		colourMap[1073] = Colour::fromString("#FFFFFC91");
		colourMap[1007] = Colour::fromString("#FFFFFC91");
		colourMap[10674] = Colour::fromString("#FFFFFC91");
		colourMap[10673] = Colour::fromString("#FFFFFC91");
		colourMap[10672] = Colour::fromString("#FFECE754");
		colourMap[1017] = Colour::fromString("#FFFFFC91");
		colourMap[1056] = Colour::fromString("#FFFFFC91");
		colourMap[10677] = Colour::fromString("#FFFFFC91");
		colourMap[10676] = Colour::fromString("#FFFFFC91");
		colourMap[10675] = Colour::fromString("#FFECE754");
		colourMap[1064] = Colour::fromString("#FFFFFC91");
		colourMap[10680] = Colour::fromString("#FFFFFC91");
		colourMap[10679] = Colour::fromString("#FFFFFC91");
		colourMap[10678] = Colour::fromString("#FFECE754");
		colourMap[1025] = Colour::fromString("#FFFFFC91");
		colourMap[10683] = Colour::fromString("#FFFFFC91");
		colourMap[10682] = Colour::fromString("#FFFFFC91");
		colourMap[10681] = Colour::fromString("#FFECE754");
		colourMap[1033] = Colour::fromString("#FFFFFC91");
		colourMap[10686] = Colour::fromString("#FFFFFC91");
		colourMap[10685] = Colour::fromString("#FFFFFC91");
		colourMap[10684] = Colour::fromString("#FFECE754");
		colourMap[1041] = Colour::fromString("#FFFFFC91");
		colourMap[10689] = Colour::fromString("#FFFFFC91");
		colourMap[10688] = Colour::fromString("#FFFFFC91");
		colourMap[10687] = Colour::fromString("#FFECE754");
		colourMap[1049] = Colour::fromString("#FFFFFC91");
		colourMap[10692] = Colour::fromString("#FFFFFC91");
		colourMap[10691] = Colour::fromString("#FFFFFC91");
		colourMap[10690] = Colour::fromString("#FFECE754");
		colourMap[1144] = Colour::fromString("#FFFFFC91");
		colourMap[1145] = Colour::fromString("#FFFFFC91");
		colourMap[1143] = Colour::fromString("#FFECE754");
		colourMap[519] = Colour::fromString("#FFF0F080");
		colourMap[989] = Colour::fromString("#FFFFFDBC");
		colourMap[91] = Colour::fromString("#FFFFFDBC");
		colourMap[846] = Colour::fromString("#FFFFFDBC");
		colourMap[1009] = Colour::fromString("#FFCCCCCC");
		colourMap[967] = Colour::fromString("#FFCCCCCC");
		colourMap[885] = Colour::fromString("#FFCCCCCC");
		colourMap[949] = Colour::fromString("#FFCCCCCC");
		colourMap[840] = Colour::fromString("#FFCCCCCC");
		colourMap[1016] = Colour::fromString("#FFCCCCCC");
		colourMap[21] = Colour::fromString("#FFCCCCCC");
		colourMap[665] = Colour::fromString("#FFCCCCCC");
		colourMap[538] = Colour::fromString("#FFCCCCCC");
		colourMap[459] = Colour::fromString("#FFCCCCCC");
		colourMap[900] = Colour::fromString("#FFCCCCCC");
		colourMap[848] = Colour::fromString("#FFCCCCCC");
		colourMap[876] = Colour::fromString("#FFCCCCCC");
		colourMap[916] = Colour::fromString("#FFCCCCCC");
		colourMap[336] = Colour::fromString("#FFCCCCCC");
		colourMap[117] = Colour::fromString("#FFCCCCCC");
		colourMap[125] = Colour::fromString("#FFCCCCCC");
		colourMap[357] = Colour::fromString("#FFCCCCCC");
		colourMap[832] = Colour::fromString("#FFCCCCCC");
		colourMap[62] = Colour::fromString("#FFCCCCCC");
		colourMap[158] = Colour::fromString("#FFCCCCCC");
		colourMap[911] = Colour::fromString("#FFCCCCCC");
		colourMap[384] = Colour::fromString("#FFCCCCCC");
		colourMap[710] = Colour::fromString("#FFCCCCCC");
		colourMap[901] = Colour::fromString("#FFCCCCCC");
		colourMap[93] = Colour::fromString("#FFCCCCCC");
		colourMap[229] = Colour::fromString("#FFCCCCCC");
		colourMap[705] = Colour::fromString("#FFCCCCCC");
		colourMap[794] = Colour::fromString("#FFCCCCCC");
		colourMap[798] = Colour::fromString("#FFCCCCCC");
		colourMap[1131] = Colour::fromString("#FFCCCCCC");
		colourMap[1116] = Colour::fromString("#FFCCCCCC");
		colourMap[933] = Colour::fromString("#FFCCCCCC");
		colourMap[1076] = Colour::fromString("#FFCCCCCC");
		colourMap[413] = Colour::fromString("#FFCCCCCC");
		colourMap[948] = Colour::fromString("#FFCCCCCC");
		colourMap[841] = Colour::fromString("#FFCCCCCC");
		colourMap[641] = Colour::fromString("#FFCCCCCC");
		colourMap[506] = Colour::fromString("#FFCCCCCC");
		colourMap[658] = Colour::fromString("#FFCCCCCC");
		colourMap[633] = Colour::fromString("#FFCCCCCC");
		colourMap[482] = Colour::fromString("#FFCCCCCC");
		colourMap[808] = Colour::fromString("#FFCCCCCC");
		colourMap[917] = Colour::fromString("#FFCCCCCC");
		colourMap[237] = Colour::fromString("#FFCCCCCC");
		colourMap[717] = Colour::fromString("#FFCCCCCC");
		colourMap[813] = Colour::fromString("#FFCCCCCC");
		colourMap[925] = Colour::fromString("#FFCCCCCC");
		colourMap[792] = Colour::fromString("#FFCCCCCC");
		colourMap[932] = Colour::fromString("#FFCCCCCC");
		colourMap[570] = Colour::fromString("#FFCCCCCC");
		colourMap[522] = Colour::fromString("#FFCCCCCC");
		colourMap[858] = Colour::fromString("#FFCCCCCC");
		colourMap[586] = Colour::fromString("#FFCCCCCC");
		colourMap[514] = Colour::fromString("#FFCCCCCC");
		colourMap[380] = Colour::fromString("#FFCCCCCC");
		colourMap[388] = Colour::fromString("#FFCCCCCC");
		colourMap[396] = Colour::fromString("#FFCCCCCC");
		colourMap[697] = Colour::fromString("#FFCCCCCC");
		colourMap[871] = Colour::fromString("#FFCCCCCC");
		colourMap[29] = Colour::fromString("#FFCCCCCC");
		colourMap[389] = Colour::fromString("#FFCCCCCC");
		colourMap[245] = Colour::fromString("#FFCCCCCC");
		colourMap[261] = Colour::fromString("#FFCCCCCC");
		colourMap[270] = Colour::fromString("#FFCCCCCC");
		colourMap[293] = Colour::fromString("#FFCCCCCC");
		colourMap[277] = Colour::fromString("#FFCCCCCC");
		colourMap[253] = Colour::fromString("#FFCCCCCC");
		colourMap[285] = Colour::fromString("#FFCCCCCC");
		colourMap[627] = Colour::fromString("#FFCCCCCC");
		colourMap[960] = Colour::fromString("#FFCCCCCC");
		colourMap[744] = Colour::fromString("#FFCCCCCC");
		colourMap[752] = Colour::fromString("#FFCCCCCC");
		colourMap[326] = Colour::fromString("#FFCCCCCC");
		colourMap[812] = Colour::fromString("#FFCCCCCC");
		colourMap[85] = Colour::fromString("#FFCCCCCC");
		colourMap[850] = Colour::fromString("#FFCCCCCC");
		colourMap[866] = Colour::fromString("#FFCCCCCC");
		colourMap[78] = Colour::fromString("#FFCCCCCC");
		colourMap[1123] = Colour::fromString("#FFCCCCCC");
		colourMap[553] = Colour::fromString("#FFCCCCCC");
		colourMap[499] = Colour::fromString("#FFCCCCCC");
		colourMap[650] = Colour::fromString("#FFCCCCCC");
		colourMap[490] = Colour::fromString("#FFCCCCCC");
		colourMap[404] = Colour::fromString("#FFCCCCCC");
		colourMap[410] = Colour::fromString("#FFCCCCCC");
		colourMap[373] = Colour::fromString("#FFCCCCCC");
		colourMap[728] = Colour::fromString("#FFCCCCCC");
		colourMap[484682512] = Colour::fromString("#FFCCCCCC");
		colourMap[983] = Colour::fromString("#FFCCCCCC");
		colourMap[776] = Colour::fromString("#FFCCCCCC");
		colourMap[956] = Colour::fromString("#FFCCCCCC");
		colourMap[579] = Colour::fromString("#FFCCCCCC");
		colourMap[964] = Colour::fromString("#FFCCCCCC");
		colourMap[1108] = Colour::fromString("#FFCCCCCC");
		colourMap[971] = Colour::fromString("#FFCCCCCC");
		colourMap[979] = Colour::fromString("#FFCCCCCC");
		colourMap[484682516] = Colour::fromString("#FFCCCCCC");
		colourMap[986] = Colour::fromString("#FFCCCCCC");
		colourMap[784] = Colour::fromString("#FFCCCCCC");
		colourMap[6] = Colour::fromString("#FFCCCCCC");
		colourMap[924] = Colour::fromString("#FFCCCCCC");
		colourMap[1036] = Colour::fromString("#FFCCCCCC");
		colourMap[1012] = Colour::fromString("#FFCCCCCC");
		colourMap[1003] = Colour::fromString("#FFCCCCCC");
		colourMap[994] = Colour::fromString("#FFCCCCCC");
		colourMap[190] = Colour::fromString("#FFCCCCCC");
		colourMap[198] = Colour::fromString("#FFCCCCCC");
		colourMap[1019] = Colour::fromString("#FFCCCCCC");
		colourMap[1028] = Colour::fromString("#FFCCCCCC");
		colourMap[896] = Colour::fromString("#FFCCCCCC");
		colourMap[1092] = Colour::fromString("#FFCCCCCC");
		colourMap[14] = Colour::fromString("#FFCCCCCC");
		colourMap[86] = Colour::fromString("#FFCCCCCC");
		colourMap[365] = Colour::fromString("#FFCCCCCC");
		colourMap[484682520] = Colour::fromString("#FFCCCCCC");
		colourMap[484682524] = Colour::fromString("#FFCCCCCC");
		colourMap[1000] = Colour::fromString("#FFCCCCCC");
		colourMap[760] = Colour::fromString("#FFCCCCCC");
		colourMap[142] = Colour::fromString("#FFCCCCCC");
		colourMap[102] = Colour::fromString("#FFCCCCCC");
		colourMap[109] = Colour::fromString("#FFCCCCCC");
		colourMap[134] = Colour::fromString("#FFCCCCCC");
		colourMap[309] = Colour::fromString("#FFCCCCCC");
		colourMap[317] = Colour::fromString("#FFCCCCCC");
		colourMap[877] = Colour::fromString("#FFCCCCCC");
		colourMap[1051] = Colour::fromString("#FFCCCCCC");
		colourMap[1060] = Colour::fromString("#FFCCCCCC");
		colourMap[1043] = Colour::fromString("#FFCCCCCC");
		colourMap[863] = Colour::fromString("#FFCCCCCC");
		colourMap[397] = Colour::fromString("#FFCCCCCC");
		colourMap[221] = Colour::fromString("#FFCCCCCC");
		colourMap[736] = Colour::fromString("#FFCCCCCC");
		colourMap[855] = Colour::fromString("#FFCCCCCC");
		colourMap[205] = Colour::fromString("#FFCCCCCC");
		colourMap[213] = Colour::fromString("#FFCCCCCC");
		colourMap[941] = Colour::fromString("#FFCCCCCC");
		colourMap[991] = Colour::fromString("#FFCCCCCC");
		colourMap[768] = Colour::fromString("#FFCCCCCC");
		colourMap[884] = Colour::fromString("#FFCCCCCC");
		colourMap[892] = Colour::fromString("#FFCCCCCC");
		colourMap[908] = Colour::fromString("#FFCCCCCC");
		colourMap[940] = Colour::fromString("#FFCCCCCC");
		colourMap[1099] = Colour::fromString("#FFCCCCCC");
		colourMap[466] = Colour::fromString("#FFCCCCCC");
		colourMap[530] = Colour::fromString("#FFCCCCCC");
		colourMap[603] = Colour::fromString("#FFCCCCCC");
		colourMap[745] = Colour::fromString("#FFCCCCCC");
		colourMap[420] = Colour::fromString("#FFCCCCCC");
		colourMap[737] = Colour::fromString("#FFCCCCCC");
		colourMap[428] = Colour::fromString("#FFCCCCCC");
		colourMap[436] = Colour::fromString("#FFCCCCCC");
		colourMap[618] = Colour::fromString("#FFCCCCCC");
		colourMap[443] = Colour::fromString("#FFCCCCCC");
		colourMap[449] = Colour::fromString("#FFCCCCCC");
		colourMap[713] = Colour::fromString("#FFCCCCCC");
		colourMap[474] = Colour::fromString("#FFCCCCCC");
		colourMap[37] = Colour::fromString("#FFCCCCCC");
		colourMap[301] = Colour::fromString("#FFCCCCCC");
		colourMap[484682528] = Colour::fromString("#FFCCCCCC");
		colourMap[824] = Colour::fromString("#FFCCCCCC");
		colourMap[54] = Colour::fromString("#FFCCCCCC");
		colourMap[405] = Colour::fromString("#FFCCCCCC");
		colourMap[174] = Colour::fromString("#FFCCCCCC");
		colourMap[349] = Colour::fromString("#FFCCCCCC");
		colourMap[817] = Colour::fromString("#FFCCCCCC");
		colourMap[825] = Colour::fromString("#FFCCCCCC");
		colourMap[833] = Colour::fromString("#FFCCCCCC");
		colourMap[166] = Colour::fromString("#FFCCCCCC");
		colourMap[341] = Colour::fromString("#FFCCCCCC");
		colourMap[182] = Colour::fromString("#FFCCCCCC");
		colourMap[762] = Colour::fromString("#FFCCCCCC");
		colourMap[770] = Colour::fromString("#FFCCCCCC");
		colourMap[779] = Colour::fromString("#FFCCCCCC");
		colourMap[787] = Colour::fromString("#FFCCCCCC");
		colourMap[150] = Colour::fromString("#FFCCCCCC");
		colourMap[46] = Colour::fromString("#FFCCCCCC");
		colourMap[753] = Colour::fromString("#FFCCCCCC");
		colourMap[690] = Colour::fromString("#FFCCCCCC");
		colourMap[681] = Colour::fromString("#FFCCCCCC");
		colourMap[673] = Colour::fromString("#FFCCCCCC");
		colourMap[1068] = Colour::fromString("#FFCCCCCC");
		colourMap[722] = Colour::fromString("#FFCCCCCC");
		colourMap[1083] = Colour::fromString("#FFCCCCCC");
		colourMap[802] = Colour::fromString("#FFCCCCCC");
		colourMap[595] = Colour::fromString("#FFCCCCCC");
		colourMap[611] = Colour::fromString("#FFCCCCCC");
		colourMap[730] = Colour::fromString("#FFCCCCCC");
		colourMap[70] = Colour::fromString("#FFCCCCCC");
		colourMap[547] = Colour::fromString("#FFCCCCCC");
		colourMap[563] = Colour::fromString("#FFCCCCCC");
		colourMap[73] = Colour::fromString("#FFAAAAAA");
		colourMap[81] = Colour::fromString("#FFAAAAAA");
		colourMap[89] = Colour::fromString("#FFAAAAAA");
		colourMap[98] = Colour::fromString("#FFAAAAAA");
		colourMap[108] = Colour::fromString("#FFAAAAAA");
		colourMap[116] = Colour::fromString("#FFAAAAAA");
		colourMap[124] = Colour::fromString("#FFAAAAAA");
		colourMap[129] = Colour::fromString("#FFAAAAAA");
		colourMap[140] = Colour::fromString("#FFAAAAAA");
		colourMap[145] = Colour::fromString("#FFAAAAAA");
		colourMap[153] = Colour::fromString("#FFAAAAAA");
		colourMap[164] = Colour::fromString("#FFAAAAAA");
		colourMap[1024] = Colour::fromString("#FFAAAAAA");
		colourMap[1032] = Colour::fromString("#FFAAAAAA");
		colourMap[1055] = Colour::fromString("#FFAAAAAA");
		colourMap[1063] = Colour::fromString("#FFAAAAAA");
		colourMap[1071] = Colour::fromString("#FFAAAAAA");
		colourMap[1078] = Colour::fromString("#FFAAAAAA");
		colourMap[1040] = Colour::fromString("#FFAAAAAA");
		colourMap[1087] = Colour::fromString("#FFAAAAAA");
		colourMap[1095] = Colour::fromString("#FFAAAAAA");
		colourMap[1103] = Colour::fromString("#FFAAAAAA");
		colourMap[1112] = Colour::fromString("#FFAAAAAA");
		colourMap[1119] = Colour::fromString("#FFAAAAAA");
		colourMap[3] = Colour::fromString("#FFAAAAAA");
		colourMap[11] = Colour::fromString("#FFAAAAAA");
		colourMap[18] = Colour::fromString("#FFAAAAAA");
		colourMap[25] = Colour::fromString("#FFAAAAAA");
		colourMap[34] = Colour::fromString("#FFAAAAAA");
		colourMap[43] = Colour::fromString("#FFAAAAAA");
		colourMap[49] = Colour::fromString("#FFAAAAAA");
		colourMap[57] = Colour::fromString("#FFAAAAAA");
		colourMap[65] = Colour::fromString("#FFAAAAAA");
		colourMap[624] = Colour::fromString("#FFAAAAAA");
		colourMap[304325711] = Colour::fromString("#FF7F2E7E");

		nameMap[997] = "root";
		nameMap[8] = "grey";
		nameMap[567] = "CH";
		nameMap[688] = "CTX";
		nameMap[695] = "CTXpl";
		nameMap[315] = "Isocortex";
		nameMap[184] = "FRP";
		nameMap[68] = "FRP1";
		nameMap[667] = "FRP2/3";
		nameMap[526157192] = "FRP5";
		nameMap[526157196] = "FRP6a";
		nameMap[526322264] = "FRP6b";
		nameMap[500] = "MO";
		nameMap[107] = "MO1";
		nameMap[219] = "MO2/3";
		nameMap[299] = "MO5";
		nameMap[644] = "MO6a";
		nameMap[947] = "MO6b";
		nameMap[985] = "MOp";
		nameMap[320] = "MOp1";
		nameMap[943] = "MOp2/3";
		nameMap[648] = "MOp5";
		nameMap[844] = "MOp6a";
		nameMap[882] = "MOp6b";
		nameMap[993] = "MOs";
		nameMap[656] = "MOs1";
		nameMap[962] = "MOs2/3";
		nameMap[767] = "MOs5";
		nameMap[1021] = "MOs6a";
		nameMap[1085] = "MOs6b";
		nameMap[453] = "SS";
		nameMap[12993] = "SS1";
		nameMap[12994] = "SS2/3";
		nameMap[12995] = "SS4";
		nameMap[12996] = "SS5";
		nameMap[12997] = "SS6a";
		nameMap[12998] = "SS6b";
		nameMap[322] = "SSp";
		nameMap[793] = "SSp1";
		nameMap[346] = "SSp2/3";
		nameMap[865] = "SSp4";
		nameMap[921] = "SSp5";
		nameMap[686] = "SSp6a";
		nameMap[719] = "SSp6b";
		nameMap[353] = "SSp-n";
		nameMap[558] = "SSp-n1";
		nameMap[838] = "SSp-n2/3";
		nameMap[654] = "SSp-n4";
		nameMap[702] = "SSp-n5";
		nameMap[889] = "SSp-n6a";
		nameMap[929] = "SSp-n6b";
		nameMap[329] = "SSp-bfd";
		nameMap[981] = "SSp-bfd1";
		nameMap[201] = "SSp-bfd2/3";
		nameMap[1047] = "SSp-bfd4";
		nameMap[1070] = "SSp-bfd5";
		nameMap[1038] = "SSp-bfd6a";
		nameMap[1062] = "SSp-bfd6b";
		nameMap[480149202] = "VISrll";
		nameMap[480149206] = "VISrll1";
		nameMap[480149210] = "VISrll2/3";
		nameMap[480149214] = "VISrll4";
		nameMap[480149218] = "VISrll5";
		nameMap[480149222] = "VISrll6a";
		nameMap[480149226] = "VISrll6b";
		nameMap[337] = "SSp-ll";
		nameMap[1030] = "SSp-ll1";
		nameMap[113] = "SSp-ll2/3";
		nameMap[1094] = "SSp-ll4";
		nameMap[1128] = "SSp-ll5";
		nameMap[478] = "SSp-ll6a";
		nameMap[510] = "SSp-ll6b";
		nameMap[345] = "SSp-m";
		nameMap[878] = "SSp-m1";
		nameMap[657] = "SSp-m2/3";
		nameMap[950] = "SSp-m4";
		nameMap[974] = "SSp-m5";
		nameMap[1102] = "SSp-m6a";
		nameMap[2] = "SSp-m6b";
		nameMap[369] = "SSp-ul";
		nameMap[450] = "SSp-ul1";
		nameMap[854] = "SSp-ul2/3";
		nameMap[577] = "SSp-ul4";
		nameMap[625] = "SSp-ul5";
		nameMap[945] = "SSp-ul6a";
		nameMap[1026] = "SSp-ul6b";
		nameMap[361] = "SSp-tr";
		nameMap[1006] = "SSp-tr1";
		nameMap[670] = "SSp-tr2/3";
		nameMap[1086] = "SSp-tr4";
		nameMap[1111] = "SSp-tr5";
		nameMap[9] = "SSp-tr6a";
		nameMap[461] = "SSp-tr6b";
		nameMap[182305689] = "SSp-un";
		nameMap[182305693] = "SSp-un1";
		nameMap[182305697] = "SSp-un2/3";
		nameMap[182305701] = "SSp-un4";
		nameMap[182305705] = "SSp-un5";
		nameMap[182305709] = "SSp-un6a";
		nameMap[182305713] = "SSp-un6b";
		nameMap[378] = "SSs";
		nameMap[873] = "SSs1";
		nameMap[806] = "SSs2/3";
		nameMap[1035] = "SSs4";
		nameMap[1090] = "SSs5";
		nameMap[862] = "SSs6a";
		nameMap[893] = "SSs6b";
		nameMap[1057] = "GU";
		nameMap[36] = "GU1";
		nameMap[180] = "GU2/3";
		nameMap[148] = "GU4";
		nameMap[187] = "GU5";
		nameMap[638] = "GU6a";
		nameMap[662] = "GU6b";
		nameMap[677] = "VISC";
		nameMap[897] = "VISC1";
		nameMap[1106] = "VISC2/3";
		nameMap[1010] = "VISC4";
		nameMap[1058] = "VISC5";
		nameMap[857] = "VISC6a";
		nameMap[849] = "VISC6b";
		nameMap[247] = "AUD";
		nameMap[1011] = "AUDd";
		nameMap[527] = "AUDd1";
		nameMap[600] = "AUDd2/3";
		nameMap[678] = "AUDd4";
		nameMap[252] = "AUDd5";
		nameMap[156] = "AUDd6a";
		nameMap[243] = "AUDd6b";
		nameMap[480149230] = "VISlla";
		nameMap[480149234] = "VISlla1";
		nameMap[480149238] = "VISlla2/3";
		nameMap[480149242] = "VISlla4";
		nameMap[480149246] = "VISlla5";
		nameMap[480149250] = "VISlla6a";
		nameMap[480149254] = "VISlla6b";
		nameMap[1002] = "AUDp";
		nameMap[735] = "AUDp1";
		nameMap[251] = "AUDp2/3";
		nameMap[816] = "AUDp4";
		nameMap[847] = "AUDp5";
		nameMap[954] = "AUDp6a";
		nameMap[1005] = "AUDp6b";
		nameMap[1027] = "AUDpo";
		nameMap[696] = "AUDpo1";
		nameMap[643] = "AUDpo2/3";
		nameMap[759] = "AUDpo4";
		nameMap[791] = "AUDpo5";
		nameMap[249] = "AUDpo6a";
		nameMap[456] = "AUDpo6b";
		nameMap[1018] = "AUDv";
		nameMap[959] = "AUDv1";
		nameMap[755] = "AUDv2/3";
		nameMap[990] = "AUDv4";
		nameMap[1023] = "AUDv5";
		nameMap[520] = "AUDv6a";
		nameMap[598] = "AUDv6b";
		nameMap[669] = "VIS";
		nameMap[801] = "VIS1";
		nameMap[561] = "VIS2/3";
		nameMap[913] = "VIS4";
		nameMap[937] = "VIS5";
		nameMap[457] = "VIS6a";
		nameMap[497] = "VIS6b";
		nameMap[402] = "VISal";
		nameMap[1074] = "VISal1";
		nameMap[905] = "VISal2/3";
		nameMap[1114] = "VISal4";
		nameMap[233] = "VISal5";
		nameMap[601] = "VISal6a";
		nameMap[649] = "VISal6b";
		nameMap[394] = "VISam";
		nameMap[281] = "VISam1";
		nameMap[1066] = "VISam2/3";
		nameMap[401] = "VISam4";
		nameMap[433] = "VISam5";
		nameMap[1046] = "VISam6a";
		nameMap[441] = "VISam6b";
		nameMap[409] = "VISl";
		nameMap[421] = "VISl1";
		nameMap[973] = "VISl2/3";
		nameMap[573] = "VISl4";
		nameMap[613] = "VISl5";
		nameMap[74] = "VISl6a";
		nameMap[121] = "VISl6b";
		nameMap[385] = "VISp";
		nameMap[593] = "VISp1";
		nameMap[821] = "VISp2/3";
		nameMap[721] = "VISp4";
		nameMap[778] = "VISp5";
		nameMap[33] = "VISp6a";
		nameMap[305] = "VISp6b";
		nameMap[425] = "VISpl";
		nameMap[750] = "VISpl1";
		nameMap[269] = "VISpl2/3";
		nameMap[869] = "VISpl4";
		nameMap[902] = "VISpl5";
		nameMap[377] = "VISpl6a";
		nameMap[393] = "VISpl6b";
		nameMap[533] = "VISpm";
		nameMap[805] = "VISpm1";
		nameMap[41] = "VISpm2/3";
		nameMap[501] = "VISpm4";
		nameMap[565] = "VISpm5";
		nameMap[257] = "VISpm6a";
		nameMap[469] = "VISpm6b";
		nameMap[312782574] = "VISli";
		nameMap[312782578] = "VISli1";
		nameMap[312782582] = "VISli2/3";
		nameMap[312782586] = "VISli4";
		nameMap[312782590] = "VISli5";
		nameMap[312782594] = "VISli6a";
		nameMap[312782598] = "VISli6b";
		nameMap[312782628] = "VISpor";
		nameMap[312782632] = "VISpor1";
		nameMap[312782636] = "VISpor2/3";
		nameMap[312782640] = "VISpor4";
		nameMap[312782644] = "VISpor5";
		nameMap[312782648] = "VISpor6a";
		nameMap[312782652] = "VISpor6b";
		nameMap[31] = "ACA";
		nameMap[572] = "ACA1";
		nameMap[1053] = "ACA2/3";
		nameMap[739] = "ACA5";
		nameMap[179] = "ACA6a";
		nameMap[227] = "ACA6b";
		nameMap[39] = "ACAd";
		nameMap[935] = "ACAd1";
		nameMap[211] = "ACAd2/3";
		nameMap[1015] = "ACAd5";
		nameMap[919] = "ACAd6a";
		nameMap[927] = "ACAd6b";
		nameMap[48] = "ACAv";
		nameMap[588] = "ACAv1";
		nameMap[296] = "ACAv2/3";
		nameMap[772] = "ACAv5";
		nameMap[810] = "ACAv6a";
		nameMap[819] = "ACAv6b";
		nameMap[972] = "PL";
		nameMap[171] = "PL1";
		nameMap[195] = "PL2";
		nameMap[304] = "PL2/3";
		nameMap[363] = "PL5";
		nameMap[84] = "PL6a";
		nameMap[132] = "PL6b";
		nameMap[44] = "ILA";
		nameMap[707] = "ILA1";
		nameMap[747] = "ILA2";
		nameMap[556] = "ILA2/3";
		nameMap[827] = "ILA5";
		nameMap[1054] = "ILA6a";
		nameMap[1081] = "ILA6b";
		nameMap[714] = "ORB";
		nameMap[264] = "ORB1";
		nameMap[492] = "ORB2/3";
		nameMap[352] = "ORB5";
		nameMap[476] = "ORB6a";
		nameMap[516] = "ORB6b";
		nameMap[723] = "ORBl";
		nameMap[448] = "ORBl1";
		nameMap[412] = "ORBl2/3";
		nameMap[630] = "ORBl5";
		nameMap[440] = "ORBl6a";
		nameMap[488] = "ORBl6b";
		nameMap[731] = "ORBm";
		nameMap[484] = "ORBm1";
		nameMap[524] = "ORBm2";
		nameMap[582] = "ORBm2/3";
		nameMap[620] = "ORBm5";
		nameMap[910] = "ORBm6a";
		nameMap[527696977] = "ORBm6b";
		nameMap[738] = "ORBv";
		nameMap[746] = "ORBvl";
		nameMap[969] = "ORBvl1";
		nameMap[288] = "ORBvl2/3";
		nameMap[1125] = "ORBvl5";
		nameMap[608] = "ORBvl6a";
		nameMap[680] = "ORBvl6b";
		nameMap[95] = "AI";
		nameMap[104] = "AId";
		nameMap[996] = "AId1";
		nameMap[328] = "AId2/3";
		nameMap[1101] = "AId5";
		nameMap[783] = "AId6a";
		nameMap[831] = "AId6b";
		nameMap[111] = "AIp";
		nameMap[120] = "AIp1";
		nameMap[163] = "AIp2/3";
		nameMap[344] = "AIp5";
		nameMap[314] = "AIp6a";
		nameMap[355] = "AIp6b";
		nameMap[119] = "AIv";
		nameMap[704] = "AIv1";
		nameMap[694] = "AIv2/3";
		nameMap[800] = "AIv5";
		nameMap[675] = "AIv6a";
		nameMap[699] = "AIv6b";
		nameMap[254] = "RSP";
		nameMap[894] = "RSPagl";
		nameMap[671] = "RSPagl1";
		nameMap[965] = "RSPagl2/3";
		nameMap[774] = "RSPagl5";
		nameMap[906] = "RSPagl6a";
		nameMap[279] = "RSPagl6b";
		nameMap[480149258] = "VISmma";
		nameMap[480149262] = "VISmma1";
		nameMap[480149266] = "VISmma2/3";
		nameMap[480149270] = "VISmma4";
		nameMap[480149274] = "VISmma5";
		nameMap[480149278] = "VISmma6a";
		nameMap[480149282] = "VISmma6b";
		nameMap[480149286] = "VISmmp";
		nameMap[480149290] = "VISmmp1";
		nameMap[480149294] = "VISmmp2/3";
		nameMap[480149298] = "VISmmp4";
		nameMap[480149302] = "VISmmp5";
		nameMap[480149306] = "VISmmp6a";
		nameMap[480149310] = "VISmmp6b";
		nameMap[480149314] = "VISm";
		nameMap[480149318] = "VISm1";
		nameMap[480149322] = "VISm2/3";
		nameMap[480149326] = "VISm4";
		nameMap[480149330] = "VISm5";
		nameMap[480149334] = "VISm6a";
		nameMap[480149338] = "VISm6b";
		nameMap[879] = "RSPd";
		nameMap[442] = "RSPd1";
		nameMap[434] = "RSPd2/3";
		nameMap[545] = "RSPd4";
		nameMap[610] = "RSPd5";
		nameMap[274] = "RSPd6a";
		nameMap[330] = "RSPd6b";
		nameMap[886] = "RSPv";
		nameMap[542] = "RSPv1";
		nameMap[606] = "RSPv2";
		nameMap[430] = "RSPv2/3";
		nameMap[687] = "RSPv5";
		nameMap[590] = "RSPv6a";
		nameMap[622] = "RSPv6b";
		nameMap[22] = "PTLp";
		nameMap[532] = "PTLp1";
		nameMap[241] = "PTLp2/3";
		nameMap[635] = "PTLp4";
		nameMap[683] = "PTLp5";
		nameMap[308] = "PTLp6a";
		nameMap[340] = "PTLp6b";
		nameMap[312782546] = "VISa";
		nameMap[312782550] = "VISa1";
		nameMap[312782554] = "VISa2/3";
		nameMap[312782558] = "VISa4";
		nameMap[312782562] = "VISa5";
		nameMap[312782566] = "VISa6a";
		nameMap[312782570] = "VISa6b";
		nameMap[417] = "VISrl";
		nameMap[312782604] = "VISrl1";
		nameMap[312782608] = "VISrl2/3";
		nameMap[312782612] = "VISrl4";
		nameMap[312782616] = "VISrl5";
		nameMap[312782620] = "VISrl6a";
		nameMap[312782624] = "VISrl6b";
		nameMap[541] = "TEa";
		nameMap[97] = "TEa1";
		nameMap[1127] = "TEa2/3";
		nameMap[234] = "TEa4";
		nameMap[289] = "TEa5";
		nameMap[729] = "TEa6a";
		nameMap[786] = "TEa6b";
		nameMap[922] = "PERI";
		nameMap[335] = "PERI6a";
		nameMap[368] = "PERI6b";
		nameMap[540] = "PERI1";
		nameMap[692] = "PERI5";
		nameMap[888] = "PERI2/3";
		nameMap[895] = "ECT";
		nameMap[836] = "ECT1";
		nameMap[427] = "ECT2/3";
		nameMap[988] = "ECT5";
		nameMap[977] = "ECT6a";
		nameMap[1045] = "ECT6b";
		nameMap[698] = "OLF";
		nameMap[507] = "MOB";
		nameMap[212] = "MOBgl";
		nameMap[220] = "MOBgr";
		nameMap[228] = "MOBipl";
		nameMap[236] = "MOBmi";
		nameMap[244] = "MOBopl";
		nameMap[151] = "AOB";
		nameMap[188] = "AOBgl";
		nameMap[196] = "AOBgr";
		nameMap[204] = "AOBmi";
		nameMap[159] = "AON";
		nameMap[167] = "AONd";
		nameMap[175] = "AONe";
		nameMap[183] = "AONl";
		nameMap[191] = "AONm";
		nameMap[199] = "AONpv";
		nameMap[160] = "AON1";
		nameMap[168] = "AON2";
		nameMap[589] = "TT";
		nameMap[597] = "TTd";
		nameMap[297] = "TTd1-4";
		nameMap[1034] = "TTd1";
		nameMap[1042] = "TTd2";
		nameMap[1050] = "TTd3";
		nameMap[1059] = "TTd4";
		nameMap[605] = "TTv";
		nameMap[306] = "TTv1-3";
		nameMap[1067] = "TTv1";
		nameMap[1075] = "TTv2";
		nameMap[1082] = "TTv3";
		nameMap[814] = "DP";
		nameMap[496] = "DP1";
		nameMap[535] = "DP2";
		nameMap[360] = "DP2/3";
		nameMap[646] = "DP5";
		nameMap[267] = "DP6a";
		nameMap[961] = "PIR";
		nameMap[152] = "PIR1-3";
		nameMap[276] = "PIR1";
		nameMap[284] = "PIR2";
		nameMap[291] = "PIR3";
		nameMap[619] = "NLOT";
		nameMap[392] = "NLOT1-3";
		nameMap[260] = "NLOT1";
		nameMap[268] = "NLOT2";
		nameMap[1139] = "NLOT3";
		nameMap[631] = "COA";
		nameMap[639] = "COAa";
		nameMap[192] = "COAa1";
		nameMap[200] = "COAa2";
		nameMap[208] = "COAa3";
		nameMap[647] = "COAp";
		nameMap[655] = "COApl";
		nameMap[584] = "COApl1-2";
		nameMap[376] = "COApl1-3";
		nameMap[216] = "COApl1";
		nameMap[224] = "COApl2";
		nameMap[232] = "COApl3";
		nameMap[663] = "COApm";
		nameMap[592] = "COApm1-2";
		nameMap[383] = "COApm1-3";
		nameMap[240] = "COApm1";
		nameMap[248] = "COApm2";
		nameMap[256] = "COApm3";
		nameMap[788] = "PAA";
		nameMap[400] = "PAA1-3";
		nameMap[408] = "PAA1";
		nameMap[416] = "PAA2";
		nameMap[424] = "PAA3";
		nameMap[566] = "TR";
		nameMap[517] = "TR1-3";
		nameMap[1140] = "TR1";
		nameMap[1141] = "TR2";
		nameMap[1142] = "TR3";
		nameMap[1089] = "HPF";
		nameMap[1080] = "HIP";
		nameMap[375] = "CA";
		nameMap[382] = "CA1";
		nameMap[391] = "CA1slm";
		nameMap[399] = "CA1so";
		nameMap[407] = "CA1sp";
		nameMap[415] = "CA1sr";
		nameMap[423] = "CA2";
		nameMap[431] = "CA2slm";
		nameMap[438] = "CA2so";
		nameMap[446] = "CA2sp";
		nameMap[454] = "CA2sr";
		nameMap[463] = "CA3";
		nameMap[471] = "CA3slm";
		nameMap[479] = "CA3slu";
		nameMap[486] = "CA3so";
		nameMap[495] = "CA3sp";
		nameMap[504] = "CA3sr";
		nameMap[726] = "DG";
		nameMap[10703] = "DG-mo";
		nameMap[10704] = "DG-po";
		nameMap[632] = "DG-sg";
		nameMap[10702] = "DG-sgz";
		nameMap[734] = "DGcr";
		nameMap[742] = "DGcr-mo";
		nameMap[751] = "DGcr-po";
		nameMap[758] = "DGcr-sg";
		nameMap[766] = "DGlb";
		nameMap[775] = "DGlb-mo";
		nameMap[782] = "DGlb-po";
		nameMap[790] = "DGlb-sg";
		nameMap[799] = "DGmb";
		nameMap[807] = "DGmb-mo";
		nameMap[815] = "DGmb-po";
		nameMap[823] = "DGmb-sg";
		nameMap[982] = "FC";
		nameMap[19] = "IG";
		nameMap[822] = "RHP";
		nameMap[909] = "ENT";
		nameMap[918] = "ENTl";
		nameMap[1121] = "ENTl1";
		nameMap[20] = "ENTl2";
		nameMap[999] = "ENTl2/3";
		nameMap[715] = "ENTl2a";
		nameMap[764] = "ENTl2b";
		nameMap[52] = "ENTl3";
		nameMap[92] = "ENTl4";
		nameMap[312] = "ENTl4/5";
		nameMap[139] = "ENTl5";
		nameMap[387] = "ENTl5/6";
		nameMap[28] = "ENTl6a";
		nameMap[60] = "ENTl6b";
		nameMap[926] = "ENTm";
		nameMap[526] = "ENTm1";
		nameMap[543] = "ENTm2";
		nameMap[468] = "ENTm2a";
		nameMap[508] = "ENTm2b";
		nameMap[664] = "ENTm3";
		nameMap[712] = "ENTm4";
		nameMap[727] = "ENTm5";
		nameMap[550] = "ENTm5/6";
		nameMap[743] = "ENTm6";
		nameMap[934] = "ENTmv";
		nameMap[259] = "ENTmv1";
		nameMap[324] = "ENTmv2";
		nameMap[371] = "ENTmv3";
		nameMap[419] = "ENTmv4";
		nameMap[1133] = "ENTmv5/6";
		nameMap[843] = "PAR";
		nameMap[10693] = "PAR1";
		nameMap[10694] = "PAR2";
		nameMap[10695] = "PAR3";
		nameMap[1037] = "POST";
		nameMap[10696] = "POST1";
		nameMap[10697] = "POST2";
		nameMap[10698] = "POST3";
		nameMap[1084] = "PRE";
		nameMap[10699] = "PRE1";
		nameMap[10700] = "PRE2";
		nameMap[10701] = "PRE3";
		nameMap[502] = "SUB";
		nameMap[509] = "SUBd";
		nameMap[829] = "SUBd-m";
		nameMap[845] = "SUBd-sp";
		nameMap[837] = "SUBd-sr";
		nameMap[518] = "SUBv";
		nameMap[853] = "SUBv-m";
		nameMap[870] = "SUBv-sp";
		nameMap[861] = "SUBv-sr";
		nameMap[484682470] = "ProS";
		nameMap[484682475] = "ProSd";
		nameMap[484682479] = "ProSd-m";
		nameMap[484682483] = "ProSd-sp";
		nameMap[484682487] = "ProSd-sr";
		nameMap[484682492] = "ProSv";
		nameMap[484682496] = "ProSv-m";
		nameMap[484682500] = "ProSv-sp";
		nameMap[484682504] = "Prosv-sr";
		nameMap[484682508] = "APr";
		nameMap[703] = "CTXsp";
		nameMap[16] = "6b";
		nameMap[583] = "CLA";
		nameMap[942] = "EP";
		nameMap[952] = "EPd";
		nameMap[966] = "EPv";
		nameMap[131] = "LA";
		nameMap[295] = "BLA";
		nameMap[303] = "BLAa";
		nameMap[311] = "BLAp";
		nameMap[451] = "BLAv";
		nameMap[319] = "BMA";
		nameMap[327] = "BMAa";
		nameMap[334] = "BMAp";
		nameMap[780] = "PA";
		nameMap[623] = "CNU";
		nameMap[477] = "STR";
		nameMap[485] = "STRd";
		nameMap[672] = "CP";
		nameMap[493] = "STRv";
		nameMap[56] = "ACB";
		nameMap[998] = "FS";
		nameMap[754] = "OT";
		nameMap[481] = "isl";
		nameMap[489] = "islm";
		nameMap[144] = "OT1-3";
		nameMap[458] = "OT1";
		nameMap[465] = "OT2";
		nameMap[473] = "OT3";
		nameMap[549009199] = "LSS";
		nameMap[275] = "LSX";
		nameMap[242] = "LS";
		nameMap[250] = "LSc";
		nameMap[258] = "LSr";
		nameMap[266] = "LSv";
		nameMap[310] = "SF";
		nameMap[333] = "SH";
		nameMap[278] = "sAMY";
		nameMap[23] = "AAA";
		nameMap[292] = "BA";
		nameMap[536] = "CEA";
		nameMap[544] = "CEAc";
		nameMap[551] = "CEAl";
		nameMap[559] = "CEAm";
		nameMap[1105] = "IA";
		nameMap[403] = "MEA";
		nameMap[411] = "MEAad";
		nameMap[418] = "MEAav";
		nameMap[426] = "MEApd";
		nameMap[472] = "MEApd-a";
		nameMap[480] = "MEApd-b";
		nameMap[487] = "MEApd-c";
		nameMap[435] = "MEApv";
		nameMap[803] = "PAL";
		nameMap[818] = "PALd";
		nameMap[1022] = "GPe";
		nameMap[1031] = "GPi";
		nameMap[835] = "PALv";
		nameMap[342] = "SI";
		nameMap[298] = "MA";
		nameMap[826] = "PALm";
		nameMap[904] = "MSC";
		nameMap[564] = "MS";
		nameMap[596] = "NDB";
		nameMap[581] = "TRS";
		nameMap[809] = "PALc";
		nameMap[351] = "BST";
		nameMap[359] = "BSTa";
		nameMap[537] = "BSTal";
		nameMap[498] = "BSTam";
		nameMap[505] = "BSTdm";
		nameMap[513] = "BSTfu";
		nameMap[546] = "BSTju";
		nameMap[521] = "BSTmg";
		nameMap[554] = "BSTov";
		nameMap[562] = "BSTrh";
		nameMap[529] = "BSTv";
		nameMap[367] = "BSTp";
		nameMap[569] = "BSTd";
		nameMap[578] = "BSTpr";
		nameMap[585] = "BSTif";
		nameMap[594] = "BSTtr";
		nameMap[602] = "BSTse";
		nameMap[287] = "BAC";
		nameMap[343] = "BS";
		nameMap[1129] = "IB";
		nameMap[549] = "TH";
		nameMap[864] = "DORsm";
		nameMap[637] = "VENT";
		nameMap[629] = "VAL";
		nameMap[685] = "VM";
		nameMap[709] = "VP";
		nameMap[718] = "VPL";
		nameMap[725] = "VPLpc";
		nameMap[733] = "VPM";
		nameMap[741] = "VPMpc";
		nameMap[563807435] = "PoT";
		nameMap[406] = "SPF";
		nameMap[414] = "SPFm";
		nameMap[422] = "SPFp";
		nameMap[609] = "SPA";
		nameMap[1044] = "PP";
		nameMap[1008] = "GENd";
		nameMap[475] = "MG";
		nameMap[1072] = "MGd";
		nameMap[1079] = "MGv";
		nameMap[1088] = "MGm";
		nameMap[170] = "LGd";
		nameMap[496345664] = "LGd-sh";
		nameMap[496345668] = "LGd-co";
		nameMap[496345672] = "LGd-ip";
		nameMap[856] = "DORpm";
		nameMap[138] = "LAT";
		nameMap[218] = "LP";
		nameMap[1020] = "PO";
		nameMap[1029] = "POL";
		nameMap[325] = "SGN";
		nameMap[560581551] = "Eth";
		nameMap[560581555] = "REth";
		nameMap[239] = "ATN";
		nameMap[255] = "AV";
		nameMap[127] = "AM";
		nameMap[1096] = "AMd";
		nameMap[1104] = "AMv";
		nameMap[64] = "AD";
		nameMap[1120] = "IAM";
		nameMap[1113] = "IAD";
		nameMap[155] = "LD";
		nameMap[444] = "MED";
		nameMap[59] = "IMD";
		nameMap[362] = "MD";
		nameMap[617] = "MDc";
		nameMap[626] = "MDl";
		nameMap[636] = "MDm";
		nameMap[366] = "SMT";
		nameMap[1077] = "PR";
		nameMap[571] = "MTN";
		nameMap[149] = "PVT";
		nameMap[15] = "PT";
		nameMap[181] = "RE";
		nameMap[560581559] = "Xi";
		nameMap[51] = "ILM";
		nameMap[189] = "RH";
		nameMap[599] = "CM";
		nameMap[907] = "PCN";
		nameMap[575] = "CL";
		nameMap[930] = "PF";
		nameMap[560581563] = "PIL";
		nameMap[262] = "RT";
		nameMap[1014] = "GENv";
		nameMap[27] = "IGL";
		nameMap[563807439] = "IntG";
		nameMap[178] = "LGv";
		nameMap[300] = "LGvl";
		nameMap[316] = "LGvm";
		nameMap[321] = "SubG";
		nameMap[958] = "EPI";
		nameMap[483] = "MH";
		nameMap[186] = "LH";
		nameMap[953] = "PIN";
		nameMap[1097] = "HY";
		nameMap[157] = "PVZ";
		nameMap[390] = "SO";
		nameMap[332] = "ASO";
		nameMap[432] = "NC";
		nameMap[38] = "PVH";
		nameMap[71] = "PVHm";
		nameMap[47] = "PVHam";
		nameMap[79] = "PVHmm";
		nameMap[103] = "PVHpm";
		nameMap[652] = "PVHpml";
		nameMap[660] = "PVHpmm";
		nameMap[94] = "PVHp";
		nameMap[55] = "PVHap";
		nameMap[87] = "PVHmpd";
		nameMap[110] = "PVHpv";
		nameMap[30] = "PVa";
		nameMap[118] = "PVi";
		nameMap[223] = "ARH";
		nameMap[141] = "PVR";
		nameMap[72] = "ADP";
		nameMap[80] = "AHA";
		nameMap[263] = "AVP";
		nameMap[272] = "AVPV";
		nameMap[830] = "DMH";
		nameMap[668] = "DMHa";
		nameMap[676] = "DMHp";
		nameMap[684] = "DMHv";
		nameMap[452] = "MEPO";
		nameMap[523] = "MPO";
		nameMap[763] = "OV";
		nameMap[914] = "PD";
		nameMap[1109] = "PS";
		nameMap[1124] = "PSCH";
		nameMap[126] = "PVp";
		nameMap[133] = "PVpo";
		nameMap[347] = "SBPV";
		nameMap[286] = "SCH";
		nameMap[338] = "SFO";
		nameMap[689] = "VLPO";
		nameMap[467] = "MEZ";
		nameMap[88] = "AHN";
		nameMap[700] = "AHNa";
		nameMap[708] = "AHNc";
		nameMap[716] = "AHNd";
		nameMap[724] = "AHNp";
		nameMap[331] = "MBO";
		nameMap[210] = "LM";
		nameMap[491] = "MM";
		nameMap[732] = "Mmme";
		nameMap[525] = "SUM";
		nameMap[1110] = "SUMl";
		nameMap[1118] = "SUMm";
		nameMap[557] = "TM";
		nameMap[1126] = "TMd";
		nameMap[1] = "TMv";
		nameMap[515] = "MPN";
		nameMap[740] = "MPNc";
		nameMap[748] = "MPNl";
		nameMap[756] = "MPNm";
		nameMap[980] = "PMd";
		nameMap[1004] = "PMv";
		nameMap[63] = "PVHd";
		nameMap[439] = "PVHdp";
		nameMap[447] = "PVHf";
		nameMap[455] = "PVHlp";
		nameMap[464] = "PVHmpv";
		nameMap[693] = "VMH";
		nameMap[761] = "VMHa";
		nameMap[769] = "VMHc";
		nameMap[777] = "VMHdm";
		nameMap[785] = "VMHvl";
		nameMap[946] = "PH";
		nameMap[290] = "LZ";
		nameMap[194] = "LHA";
		nameMap[226] = "LPO";
		nameMap[356] = "PST";
		nameMap[364] = "PSTN";
		nameMap[173] = "RCH";
		nameMap[470] = "STN";
		nameMap[614] = "TU";
		nameMap[797] = "ZI";
		nameMap[796] = "A13";
		nameMap[804] = "FF";
		nameMap[10671] = "ME";
		nameMap[313] = "MB";
		nameMap[339] = "MBsen";
		nameMap[302] = "SCs";
		nameMap[851] = "SCop";
		nameMap[842] = "SCsg";
		nameMap[834] = "SCzo";
		nameMap[4] = "IC";
		nameMap[811] = "ICc";
		nameMap[820] = "ICd";
		nameMap[828] = "ICe";
		nameMap[580] = "NB";
		nameMap[271] = "SAG";
		nameMap[874] = "PBG";
		nameMap[460] = "MEV";
		nameMap[323] = "MBmot";
		nameMap[381] = "SNr";
		nameMap[749] = "VTA";
		nameMap[246] = "RR";
		nameMap[128] = "MRN";
		nameMap[539] = "MRNm";
		nameMap[548] = "MRNmg";
		nameMap[555] = "MRNp";
		nameMap[294] = "SCm";
		nameMap[26] = "SCdg";
		nameMap[42] = "SCdw";
		nameMap[17] = "SCiw";
		nameMap[10] = "SCig";
		nameMap[494] = "SCig-a";
		nameMap[503] = "SCig-b";
		nameMap[511] = "SCig-c";
		nameMap[795] = "PAG";
		nameMap[50] = "PRC";
		nameMap[67] = "INC";
		nameMap[587] = "ND";
		nameMap[1100] = "PRT";
		nameMap[215] = "APN";
		nameMap[531] = "MPT";
		nameMap[628] = "NOT";
		nameMap[634] = "NPC";
		nameMap[706] = "OP";
		nameMap[1061] = "PPT";
		nameMap[549009203] = "RPF";
		nameMap[549009207] = "InCo";
		nameMap[616] = "CUN";
		nameMap[214] = "RN";
		nameMap[35] = "III";
		nameMap[549009211] = "MA3";
		nameMap[975] = "EW";
		nameMap[115] = "IV";
		nameMap[757] = "VTN";
		nameMap[231] = "AT";
		nameMap[66] = "LT";
		nameMap[75] = "DT";
		nameMap[58] = "MT";
		nameMap[615] = "SNl";
		nameMap[348] = "MBsta";
		nameMap[374] = "SNc";
		nameMap[1052] = "PPN";
		nameMap[165] = "RAmb";
		nameMap[12] = "IF";
		nameMap[100] = "IPN";
		nameMap[197] = "RL";
		nameMap[591] = "CLI";
		nameMap[872] = "DR";
		nameMap[1065] = "HB";
		nameMap[771] = "P";
		nameMap[1132] = "P-sen";
		nameMap[612] = "NLL";
		nameMap[82] = "NLLd";
		nameMap[90] = "NLLh";
		nameMap[99] = "NLLv";
		nameMap[7] = "PSV";
		nameMap[867] = "PB";
		nameMap[123] = "KF";
		nameMap[881] = "PBl";
		nameMap[860] = "PBlc";
		nameMap[868] = "PBld";
		nameMap[875] = "PBle";
		nameMap[883] = "PBls";
		nameMap[891] = "PBlv";
		nameMap[890] = "PBm";
		nameMap[899] = "PBme";
		nameMap[915] = "PBmm";
		nameMap[923] = "PBmv";
		nameMap[398] = "SOC";
		nameMap[122] = "POR";
		nameMap[105] = "SOCm";
		nameMap[114] = "SOCl";
		nameMap[987] = "P-mot";
		nameMap[280] = "B";
		nameMap[880] = "DTN";
		nameMap[283] = "LTN";
		nameMap[898] = "PCG";
		nameMap[931] = "PG";
		nameMap[1093] = "PRNc";
		nameMap[552] = "PRNv";
		nameMap[318] = "SG";
		nameMap[462] = "SSN";
		nameMap[534] = "SUT";
		nameMap[574] = "TRN";
		nameMap[621] = "V";
		nameMap[549009215] = "P5";
		nameMap[549009219] = "Acs5";
		nameMap[549009223] = "PC5";
		nameMap[549009227] = "I5";
		nameMap[1117] = "P-sat";
		nameMap[679] = "CS";
		nameMap[137] = "CSl";
		nameMap[130] = "CSm";
		nameMap[147] = "LC";
		nameMap[162] = "LDT";
		nameMap[604] = "NI";
		nameMap[146] = "PRNr";
		nameMap[238] = "RPO";
		nameMap[350] = "SLC";
		nameMap[358] = "SLD";
		nameMap[354] = "MY";
		nameMap[386] = "MY-sen";
		nameMap[207] = "AP";
		nameMap[607] = "CN";
		nameMap[112] = "CNlam";
		nameMap[560] = "CNspg";
		nameMap[96] = "DCO";
		nameMap[101] = "VCO";
		nameMap[720] = "DCN";
		nameMap[711] = "CU";
		nameMap[1039] = "GR";
		nameMap[903] = "ECU";
		nameMap[642] = "NTB";
		nameMap[651] = "NTS";
		nameMap[659] = "NTSce";
		nameMap[666] = "NTSco";
		nameMap[674] = "NTSge";
		nameMap[682] = "NTSl";
		nameMap[691] = "NTSm";
		nameMap[429] = "SPVC";
		nameMap[437] = "SPVI";
		nameMap[445] = "SPVO";
		nameMap[77] = "SPVOcdm";
		nameMap[53] = "SPVOmdmd";
		nameMap[61] = "SPVOmdmv";
		nameMap[45] = "SPVOrdm";
		nameMap[69] = "SPVOvl";
		nameMap[789] = "z";
		nameMap[370] = "MY-mot";
		nameMap[653] = "VI";
		nameMap[568] = "ACVI";
		nameMap[661] = "VII";
		nameMap[576] = "ACVII";
		nameMap[640] = "EV";
		nameMap[135] = "AMB";
		nameMap[939] = "AMBd";
		nameMap[143] = "AMBv";
		nameMap[839] = "DMX";
		nameMap[887] = "ECO";
		nameMap[1048] = "GRN";
		nameMap[372] = "ICB";
		nameMap[83] = "IO";
		nameMap[136] = "IRN";
		nameMap[106] = "ISN";
		nameMap[203] = "LIN";
		nameMap[235] = "LRN";
		nameMap[955] = "LRNm";
		nameMap[963] = "LRNp";
		nameMap[307] = "MARN";
		nameMap[395] = "MDRN";
		nameMap[1098] = "MDRNd";
		nameMap[1107] = "MDRNv";
		nameMap[852] = "PARN";
		nameMap[859] = "PAS";
		nameMap[938] = "PGRN";
		nameMap[970] = "PGRNd";
		nameMap[978] = "PGRNl";
		nameMap[154] = "PHY";
		nameMap[161] = "NIS";
		nameMap[177] = "NR";
		nameMap[169] = "PRP";
		nameMap[995] = "PMR";
		nameMap[1069] = "PPY";
		nameMap[185] = "PPYd";
		nameMap[193] = "PPYs";
		nameMap[701] = "VNC";
		nameMap[209] = "LAV";
		nameMap[202] = "MV";
		nameMap[225] = "SPIV";
		nameMap[217] = "SUV";
		nameMap[765] = "x";
		nameMap[773] = "XII";
		nameMap[781] = "y";
		nameMap[76] = "INV";
		nameMap[379] = "MY-sat";
		nameMap[206] = "RM";
		nameMap[230] = "RPA";
		nameMap[222] = "RO";
		nameMap[512] = "CB";
		nameMap[528] = "CBX";
		nameMap[645] = "VERM";
		nameMap[912] = "LING";
		nameMap[10707] = "LINGmo";
		nameMap[10706] = "LINGpu";
		nameMap[10705] = "LINGgr";
		nameMap[920] = "CENT";
		nameMap[976] = "CENT2";
		nameMap[10710] = "CENT2mo";
		nameMap[10709] = "CENT2pu";
		nameMap[10708] = "CENT2gr";
		nameMap[984] = "CENT3";
		nameMap[10713] = "CENT3mo";
		nameMap[10712] = "CENT3pu";
		nameMap[10711] = "CENT3gr";
		nameMap[928] = "CUL";
		nameMap[992] = "CUL4";
		nameMap[10716] = "CUL4mo";
		nameMap[10715] = "CUL4pu";
		nameMap[10714] = "CUL4gr";
		nameMap[1001] = "CUL5";
		nameMap[10719] = "CUL5mo";
		nameMap[10718] = "CUL5pu";
		nameMap[10717] = "CUL5gr";
		nameMap[1091] = "CUL4 5";
		nameMap[10722] = "CUL4 5mo";
		nameMap[10721] = "CUL4 5pu";
		nameMap[10720] = "CUL4 5gr";
		nameMap[936] = "DEC";
		nameMap[10725] = "DECmo";
		nameMap[10724] = "DECpu";
		nameMap[10723] = "DECgr";
		nameMap[944] = "FOTU";
		nameMap[10728] = "FOTUmo";
		nameMap[10727] = "FOTUpu";
		nameMap[10726] = "FOTUgr";
		nameMap[951] = "PYR";
		nameMap[10731] = "PYRmo";
		nameMap[10730] = "PYRpu";
		nameMap[10729] = "PYRgr";
		nameMap[957] = "UVU";
		nameMap[10734] = "UVUmo";
		nameMap[10733] = "UVUpu";
		nameMap[10732] = "UVUgr";
		nameMap[968] = "NOD";
		nameMap[10737] = "NODmo";
		nameMap[10736] = "NODpu";
		nameMap[10735] = "NODgr";
		nameMap[1073] = "HEM";
		nameMap[1007] = "SIM";
		nameMap[10674] = "SIMmo";
		nameMap[10673] = "SIMpu";
		nameMap[10672] = "SIMgr";
		nameMap[1017] = "AN";
		nameMap[1056] = "ANcr1";
		nameMap[10677] = "ANcr1mo";
		nameMap[10676] = "ANcr1pu";
		nameMap[10675] = "ANcr1gr";
		nameMap[1064] = "ANcr2";
		nameMap[10680] = "ANcr2mo";
		nameMap[10679] = "ANcr2pu";
		nameMap[10678] = "ANcr2gr";
		nameMap[1025] = "PRM";
		nameMap[10683] = "PRMmo";
		nameMap[10682] = "PRMpu";
		nameMap[10681] = "PRMgr";
		nameMap[1033] = "COPY";
		nameMap[10686] = "COPYmo";
		nameMap[10685] = "COPYpu";
		nameMap[10684] = "COPYgr";
		nameMap[1041] = "PFL";
		nameMap[10689] = "PFLmo";
		nameMap[10688] = "PFLpu";
		nameMap[10687] = "PFLgr";
		nameMap[1049] = "FL";
		nameMap[10692] = "FLmo";
		nameMap[10691] = "FLpu";
		nameMap[10690] = "FLgr";
		nameMap[1144] = "CBXmo";
		nameMap[1145] = "CBXpu";
		nameMap[1143] = "CBXgr";
		nameMap[519] = "CBN";
		nameMap[989] = "FN";
		nameMap[91] = "IP";
		nameMap[846] = "DN";
		nameMap[1009] = "fiber tracts";
		nameMap[967] = "cm";
		nameMap[885] = "tn";
		nameMap[949] = "von";
		nameMap[840] = "In";
		nameMap[1016] = "onl";
		nameMap[21] = "lotg";
		nameMap[665] = "lot";
		nameMap[538] = "lotd";
		nameMap[459] = "aolt";
		nameMap[900] = "aco";
		nameMap[848] = "IIn";
		nameMap[876] = "aot";
		nameMap[916] = "bsc";
		nameMap[336] = "csc";
		nameMap[117] = "och";
		nameMap[125] = "opt";
		nameMap[357] = "ttp";
		nameMap[832] = "IIIn";
		nameMap[62] = "mlf";
		nameMap[158] = "pc";
		nameMap[911] = "IVn";
		nameMap[384] = "IVd";
		nameMap[710] = "VIn";
		nameMap[901] = "Vn";
		nameMap[93] = "moV";
		nameMap[229] = "sV";
		nameMap[705] = "mtV";
		nameMap[794] = "sptV";
		nameMap[798] = "VIIn";
		nameMap[1131] = "iVIIn";
		nameMap[1116] = "gVIIn";
		nameMap[933] = "VIIIn";
		nameMap[1076] = "cvb";
		nameMap[413] = "vVIIIn";
		nameMap[948] = "cVIIIn";
		nameMap[841] = "tb";
		nameMap[641] = "ias";
		nameMap[506] = "das";
		nameMap[658] = "ll";
		nameMap[633] = "cic";
		nameMap[482] = "bic";
		nameMap[808] = "IXn";
		nameMap[917] = "Xn";
		nameMap[237] = "ts";
		nameMap[717] = "XIn";
		nameMap[813] = "XIIn";
		nameMap[925] = "vrt";
		nameMap[792] = "drt";
		nameMap[932] = "cett";
		nameMap[570] = "dl";
		nameMap[522] = "dcm";
		nameMap[858] = "vc";
		nameMap[586] = "fpr";
		nameMap[514] = "dc";
		nameMap[380] = "cuf";
		nameMap[388] = "grf";
		nameMap[396] = "iaf";
		nameMap[697] = "ml";
		nameMap[871] = "sst";
		nameMap[29] = "sttl";
		nameMap[389] = "sttv";
		nameMap[245] = "scrt";
		nameMap[261] = "sop";
		nameMap[270] = "srp";
		nameMap[293] = "svp";
		nameMap[277] = "stp";
		nameMap[253] = "shp";
		nameMap[285] = "step";
		nameMap[627] = "hht";
		nameMap[960] = "cbf";
		nameMap[744] = "cbc";
		nameMap[752] = "cbp";
		nameMap[326] = "scp";
		nameMap[812] = "dscp";
		nameMap[85] = "sct";
		nameMap[850] = "uf";
		nameMap[866] = "sctv";
		nameMap[78] = "mcp";
		nameMap[1123] = "icp";
		nameMap[553] = "sctd";
		nameMap[499] = "cct";
		nameMap[650] = "jrb";
		nameMap[490] = "bct";
		nameMap[404] = "oct";
		nameMap[410] = "rct";
		nameMap[373] = "tct";
		nameMap[728] = "arb";
		nameMap[484682512] = "scwm";
		nameMap[983] = "lfbs";
		nameMap[776] = "cc";
		nameMap[956] = "fa";
		nameMap[579] = "ec";
		nameMap[964] = "ee";
		nameMap[1108] = "ccg";
		nameMap[971] = "fp";
		nameMap[979] = "ccr";
		nameMap[484682516] = "ccb";
		nameMap[986] = "ccs";
		nameMap[784] = "cst";
		nameMap[6] = "int";
		nameMap[924] = "cpd";
		nameMap[1036] = "cte";
		nameMap[1012] = "crt";
		nameMap[1003] = "cpt";
		nameMap[994] = "cbt";
		nameMap[190] = "py";
		nameMap[198] = "pyd";
		nameMap[1019] = "cstc";
		nameMap[1028] = "cstu";
		nameMap[896] = "lfbst";
		nameMap[1092] = "em";
		nameMap[14] = "im";
		nameMap[86] = "mtc";
		nameMap[365] = "tp";
		nameMap[484682520] = "or";
		nameMap[484682524] = "ar";
		nameMap[1000] = "eps";
		nameMap[760] = "epsc";
		nameMap[142] = "pap";
		nameMap[102] = "nst";
		nameMap[109] = "ntt";
		nameMap[134] = "ptf";
		nameMap[309] = "snp";
		nameMap[317] = "stf";
		nameMap[877] = "tsp";
		nameMap[1051] = "tspd";
		nameMap[1060] = "dtd";
		nameMap[1043] = "tspc";
		nameMap[863] = "rust";
		nameMap[397] = "vtd";
		nameMap[221] = "rrt";
		nameMap[736] = "ctb";
		nameMap[855] = "rst";
		nameMap[205] = "rstl";
		nameMap[213] = "rstm";
		nameMap[941] = "vsp";
		nameMap[991] = "mfbs";
		nameMap[768] = "mfbc";
		nameMap[884] = "amc";
		nameMap[892] = "apd";
		nameMap[908] = "act";
		nameMap[940] = "cing";
		nameMap[1099] = "fxs";
		nameMap[466] = "alv";
		nameMap[530] = "df";
		nameMap[603] = "fi";
		nameMap[745] = "fxprg";
		nameMap[420] = "db";
		nameMap[737] = "fxpo";
		nameMap[428] = "mct";
		nameMap[436] = "fx";
		nameMap[618] = "hc";
		nameMap[443] = "dhc";
		nameMap[449] = "vhc";
		nameMap[713] = "per";
		nameMap[474] = "ab";
		nameMap[37] = "lab";
		nameMap[301] = "st";
		nameMap[484682528] = "stc";
		nameMap[824] = "mfsbshy";
		nameMap[54] = "mfb";
		nameMap[405] = "vlt";
		nameMap[174] = "poc";
		nameMap[349] = "sup";
		nameMap[817] = "supa";
		nameMap[825] = "supd";
		nameMap[833] = "supv";
		nameMap[166] = "pmx";
		nameMap[341] = "smd";
		nameMap[182] = "php";
		nameMap[762] = "phpd";
		nameMap[770] = "phpl";
		nameMap[779] = "phpm";
		nameMap[787] = "phpv";
		nameMap[150] = "pvbh";
		nameMap[46] = "mfbsma";
		nameMap[753] = "pm";
		nameMap[690] = "mtt";
		nameMap[681] = "mtg";
		nameMap[673] = "mp";
		nameMap[1068] = "mfbst";
		nameMap[722] = "pvbt";
		nameMap[1083] = "mfbse";
		nameMap[802] = "sm";
		nameMap[595] = "fr";
		nameMap[611] = "hbc";
		nameMap[730] = "PIS";
		nameMap[70] = "mfbsm";
		nameMap[547] = "dlf";
		nameMap[563] = "dtt";
		nameMap[73] = "VS";
		nameMap[81] = "VL";
		nameMap[89] = "RC";
		nameMap[98] = "SEZ";
		nameMap[108] = "chpl";
		nameMap[116] = "chfl";
		nameMap[124] = "IVF";
		nameMap[129] = "V3";
		nameMap[140] = "AQ";
		nameMap[145] = "V4";
		nameMap[153] = "V4r";
		nameMap[164] = "c";
		nameMap[1024] = "grv";
		nameMap[1032] = "grv of CTX";
		nameMap[1055] = "eg";
		nameMap[1063] = "hf";
		nameMap[1071] = "rf";
		nameMap[1078] = "ri";
		nameMap[1040] = "grv of CBX";
		nameMap[1087] = "pce";
		nameMap[1095] = "pcf";
		nameMap[1103] = "pri";
		nameMap[1112] = "psf";
		nameMap[1119] = "ppf";
		nameMap[3] = "sec";
		nameMap[11] = "plf";
		nameMap[18] = "nf";
		nameMap[25] = "sif";
		nameMap[34] = "icf";
		nameMap[43] = "apf";
		nameMap[49] = "ipf";
		nameMap[57] = "pms";
		nameMap[65] = "pfs";
		nameMap[624] = "IPF";
		nameMap[304325711] = "retina";		

	}

	Colour getColourForRegion(int regionId)
	{
		if (colourMap.find(regionId) == colourMap.end())
		{
			return Colours::black;
		} else {
			return colourMap[regionId];
		}
	}

	String getNameForRegion(int regionId)
	{
		if (nameMap.find(regionId) == nameMap.end())
		{
			return "unknown";
		} else {
			return nameMap[regionId];
		}
	}

private:
	std::map<int, Colour> colourMap;
	std::map<int, String> nameMap;
};

#endif